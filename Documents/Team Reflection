
Team reflection

Week 1 2018-03-20:

The chosen scope of the application under development including priority of features and for whom you are creating value
* We are not able to answer this question since we have not yet been briefed by our clients and stakeholders

Our social contract, which means you should create one in the first week
* Weekly meetings are Monday, Wednesday and Friday. 
* Meeting on monday is for planning the weekly activities and dividing the sprint up between members.
* Meeting on Wednesday has the main purpose of making sure everyone is on track and see if someone is in need of help.
* Meeting on Friday is for finishing the spring and reflecting on the past weeks activities.
* Each one has responsbility for the given task divided by the group
    - This implies that you either have to solve the task or ask for help if you cannot solve the problem yourself/ in the couple
* The programming part will be done in pairs of two in order to maximize our problem solving ability. However, this will not be a strict division but as guideline for the project. At our meetings the whole group will help each other if stuck at a problem.
* Group Roles
    - Project Developer
    - Scrum master
    - Team member - Developer

The success criteria for the team in terms of what you want to achieve with your application
* For the application to be deemed successful by the team it is important that the perceived value of the recipient is in line with expectations on the application both in regards to quality and the features included. For this to be possible it is important to maintain expectations during the projects progress since there is a limited amount of time to work with and initial expectations might not be manageable within the limitations. 

Your acceptance tests, such as how they were performed and with whom
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The design of your application (choice of APIs, architecture patterns etc)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The structural overview of your application (such as class diagrams, domain models or component diagrams)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The three KPIs you use for monitoring your progress
* Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
* Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
* Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.


Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The roles you have used within the team
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The agile practices you have used for the current sprint
* As this is still a prep phase the sprint hasn’t started yet. We have instead started planning on how to perform agile practices during our coming sprints (e.g. pair programming, sharing/helping other programmers etc.)

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
* Lecture monday 4h
* Lecture wednesday 4h
* Meeting tuesday 2018-03-20 4h
* Individual writing reflection and reading up on scrum theory 4h

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
* We haven’t completed an official sprint this week so we didn’t do a sprint review.

Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
* We are going to use GITHUB for version control.
* To coordinate our planned meetings and working time a shared Google Calendar will be used
* For documentation of meetings a Google drive calendar will be used 
* TODO: Update with further relevant tools

Relation to literature and guest lectures (how do your reflections relate to what others have to say?)
* We have used some of the concepts such as KPI’s from the lectures on monday the 19th of March, the scrum concept will be applied throughout the project.



Team Reflection-week 2

The chosen scope of the application under development including priority of features and for whom you are creating value.
 * We have received a vessel business operator. We will adapt the app PortableCDM to suit the environment of a vessel. 
Our social contract
 *The social contract has been somewhat modified this week due to Easter break. Also because of the fact that the assignment was not received until wednesday we have not been able to work with the assignment other than reflect and discuss it. 
The success criteria for the team in terms of what you want to achieve with your application
 *We feel like last weeks explanation of a successful project remains the same for this week, 
 *For the application to be deemed successful by the team it is important that the perceived value of the recipient is in line with expectations on the application both in regards to quality and the features included. For this to be possible it is important to maintain expectations during the projects progress since there is a limited amount of time to work with and initial expectations might not be manageable within the limitations.
Your acceptance tests, such as how they were performed and with whom
 *Since the project was received on wednesday we have not had the chance to perform any acceptance tests. 
The design of your application (choice of APIs, architecture patterns etc)
 *Since the project was received on wednesday we have not had the chance to reflect on the design of the application.  
The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The structural overview of your application (such as class diagrams, domain models or component diagrams)
 *Since the project hasn’t been started yet, we cannot reflect on this point.
Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The three KPIs you use for monitoring your progress
 *Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
 *Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
 *Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.
Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The roles you have used within the team
 *The roles this week have basically been the same for all participants of this group. We have spent most of the time reading about the project.
The agile practices you have used for the current sprint
 *As this is still a prep phase the sprint hasn’t started yet. We have continued to plan how to perform agile practices during our coming sprints (e.g. pair programming, sharing/helping other programmers etc.)
The time you have spent on the course (so keep track of your hours so you can describe the current situation)
 *Lecture monday 2h
 *Lecture wednesday 2h
 *Meeting Thursday 4h
Individual writing and reflection 4h
The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
We haven’t completed an official sprint this week so we didn’t do a sprint review.
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
 We are going to use GITHUB for version control where
To coordinate our planned meetings and working time a shared Google Calendar will be used
For documentation of meetings a Google drive calendar will be used 
For communcation between meetings we created a Facebook-chat.
TODO: Update with further relevant tools
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
We have used some of the concepts such as KPI’s from the lectures on monday the 19th of March, the scrum concept will be applied throughout the project. Now when we have gotten some more info about the project, we understand it might be hard to see/understand how the  final version of the application will be. The development will be an ongoing process. The aim is to use the KATA-principle as much as possible. 

Team Reflection Week 3 2018-04-13:

The chosen scope of the application under development including priority of features and for whom you are creating value
* This week we have tried setting up the programming environment and the technical solutions required for creating the application for all team members.
This includes setting up
Android Studio
Expo
Git
Visual Studio(for creating JavaScript)
Node.js
Further, we have set up Trello for working with the backlog and the sprintlog. We have created a group where we will keep our user stories

We have also began analyzing the scenario and together with end user(vessel) we have started to break down the tasks to figure out what relevant functions the applications should contain and also the priority of the functions. 

Our social contract, which means you should create one in the first week
* This week we didn’t follow the social contract completely because we didn’t have a monday meeting as scheduled. This was due to a deadline in the bachelor thesis, .though we compensated the missed monday meeting by working during the easter break.
* The others parts of the contract have been followed accordingly.
* This week John was Scrum master.

The success criteria for the team in terms of what you want to achieve with your application
* Our success criteria for this week was to successfully get the programme environment successfully set up. We were not successful on this point, due to having several problems with the mac computers, namely getting the NPM install running. 

Your acceptance tests, such as how they were performed and with whom
* The acceptance test for this week was being able to run the application (portableCDM) running on every team members computer. As mentioned above, they were unsuccessful. 

The design of your application (choice of APIs, architecture patterns etc)
* We didn’t design anything this week, so this question cannot be answered.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
* We didn’t design anything this week, so this question cannot be answered.

The structural overview of your application (such as class diagrams, domain models or component diagrams)
* We didn’t design anything this week, so this question cannot be answered.

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
1. Explanation: As a team member, i would like to set up the programming environment
Acceptance criteria: Getting the application running (portablecdm) on every team members computer
Task breakdown: Install following through guidance of the readme-file provided on the coursepage: 
Android Studio
Expo
Git
Visual Studio(for creating JavaSctript)
Node.js
Effort estimation: 100 
2. Explanation: As a team member I want to be able to output a single text message through the application.
Acceptance criteria: Outputing a text message
Task breakdown: Learning the required java script, successfully completing user story 1, programming the method the text message output.
Effort estimation: 60
3. Explanation: Accessing prices from different ship agents in a given port.
Acceptance criteria: Being able to see only prices from relevant ship agents in portablecdm.
Task breakdown: Not yet known, yet to figure out.
Effort estimation: 400
4. Explanation: As a vessel i need to be able to send estimated arrival time as a stamp. 
Acceptance Criteria: Being able to send a time-stamp to a recepient. 
Task Breakdown: Not yet known, yet to figure out. 
Effort estimation: 200

The three KPIs you use for monitoring your progress
* Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
* Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
* Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.


Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
No code has yet been written, thus this is not relevant for reflection

The roles you have used within the team
Scrum-master: John
User-story responsibles: Olle & Fredrik
Developers: Rebecca & Johan
Acceptance criteria testers: Emil, Jonathan and Niklas

The agile practices you have used for the current sprint
User-stories
Backlog
Sprintlog
Iteration withing testing the acceptance criteria



The time you have spent on the course (so keep track of your hours so you can describe the current situation)
Tuesday:
8 hours spent installing and setting up the programming interface and the environment
Wednesday:
4 hours spent with Open arena contacting end-user, product owner etc.
2 hours spent with setting up the application interface
Friday
2 hours spent on performing user-stories
2,5 hours weekly review of performance

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Setting up the programming environment: We have not succeeded to meet the acceptance criteria for this task since no one has yet been able to run the app successfully. Although we have not completeted the whole user-story we have managed to complete some of the tasks included. E.g. install android studio, install GIT
Further, we have been able to better understand how to handle user-stories by using the Trello software

Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Trello will be used for user-stories
Microsoft Visual will be used for handling the java-scripts
For the sprint-planning we will print the user-stories and perform the ranking and choice of what to include in the sprint

Relation to literature and guest lectures (how do your reflections relate to what others have to say?)
We have studied the ScrumXP litterature and read the first 5 chapters. From these chapters we have learnt how to perform sprint planning, setting up the backlog and sprintlog and further how to rank user-stories importance and scope.


Team Reflection Week 4 2018-04-25:

Team Reflection-Sprint 2

The chosen scope of the application under development including priority of features and for whom you are creating value.
Vi har denna veckan lagt mycket fokus på vår Epic-User Story 3. Denna har målet att alla gruppmedlemmar ska lära sig programmeringsarktitekturen samt att använda sig utav de olika programmen som är nödvändiga för att dels utveckla appen samt för att kunna använda sig utav den agila metodiken och SCRUM.
Denna vecka har vi även börjar med vår utveckling av de funktioner som anses skapa värde för end-user och produktägare. Detta har gjorts genom att dela upp ansvaret för två andra Epics som vi har samt att vi börjat bekanta oss med appens tekniska funktioner. Vi även börjar lägga till funktioner för att lära oss hur detta fungerar.
Detta kan sammanfattas genom följande beskrivning
Vart är vi idag?
Vi är fortfarande i uppstartsfasen där vi håller på och lär oss de nödvändiga programmeringskunskaperna och utvecklingsverktygen som är lämpliga för att kunna leverera värde till våra stakeholders. Vi har idag bättre på koll på Scrum-metodiken än tidigare men vi känner samtidigt att vi saknar en del av den kunskap och kompetenser som vi känner att vi bör ha för att på ett bättre sätt kunna utföra sprintarna och utvärdera dessa.
Vart vill vi?
Vi vill komma till det stadie att vi känner att vi har koll på hur programmeringsmiljö fungerar samt att vi vet hur vi på ett bra ska angripa de problem vi stöter på när vi ska försöka implementera den funktionalitet som ges av våra user-story. Gällande Scrum-metodiken vill vi få en bättre förståelse för denna och speciellt vid hur valet av user stories, backlog, sprint log samt velocity bör utföras. Detta då vi känner att detta är något som skapar problem för oss idagsläget.
Hur tar vi oss dit?
Vi tar oss dit genom att fortsätta lära oss mer om programmeringsspråket samt då bättre förstå Java-script om hur appen är upplagd. Det är även nödvändigt att vi fortsätter vårt arbete med att lära oss mer om Scrum-metodiken vilket vi kör genom att fortsätta vår studie av den givna litteraturen.

Our social contract
Efter ett samtal med Jan-Philipp i förra onsdagen så bestämde vi oss för att byta sprintstart från måndag till onsdag. Detta kommer att gynna kommande sprints eftersom vi kommer kunna ha tillgång till produktägare/end-user/ansvariga lärare under både sprint planning meeting samt under sprint review. Detta innebär att sprint två fick förlängas med en halv vecka. Vidare har vi bestämt oss för att efter varje möte/kodtillfälle utvärdera och anteckna de problem vi har haft samt hur vi hade kunnat arbeta bättre. 
Hur ser det ut nu?
Måndag-till-till måndag sprints och ingen kontinuerlig reflektion. Detta medför svårigheter det är flera inblandade aktörer som bör vara med och bestämma hur sprinten ser ut för att uppnå bästa möjliga resultat. En av dessa är produktägaren, som vi bara har tillgång till på onsdagar. Att vi inte för någon Kontinuerlig reflektion medför svårigheter i skrivandet av den slutliga reflektionen för sprinten. Det är svårt att komma ihåg alla problem vi haft i detalj. 
Hur vill vi att det ska se ut?
Vi vill att produktägare/end-user/ansvariga lärare ska finnas tillgängliga under sprint planning meeting och dessutom kunna ge input/feedback på det som har åstadkommits i form av kod samt även reflektion. Detta är även en perfekt möjlighet att få vägledning i hur vi arbetar med scrum, målet är att kontinuerligt under sprinten reflektera över hur det går, samt hur vi kan göra det bättre. 
Hur kommer vi dit?
För att få med produktägare, end-user samt ansvariga lärare kommer vi ändra dag för att starta en ny sprint från måndag till onsdag. Vi kommer även börja anteckna våra reflektioner efter varje möte/kodtillfälle. Vårt social contract kommer uppdateras för att få med dessa förändringar. 

The success criteria for the team in terms of what you want to achieve with your application
Hur det ser ut idag?
Vi har i dagsläget inga tydliga mått på hur vi kan mäta samt utvärdera vår prestation, förutom att “bocka av” user stories som vi har gjort. Genom att ha mer konkreta mått på prestationen kommer vi lättare kunna se vad som behövs förbättras för att gruppen ska fungera bättre. En stor anledning till varför det är såhär är eftersom hittills har våra User stories inte varit tillräckligt tydliga och alldeles för abstrakta. Detta kan härledas till att de hittills bestått av att vi som grupp ska sträva efter att lära oss mer om utvecklarmiljön för att i slutändan kunna skapa värde för kund.
Hur vill vi att situationen ska se ut: Ha mer tydliga mått på när vi har “lyckats” med en deluppgift, uppgift eller sprint, för att tydliggöra vilka områden vi behöver jobba på.
Hur ska vi ta oss dit?
Genom samråd med handledare/examinator samt diskussion i gruppen kommer tydligare mål kunna sättas upp, som är enkla att mäta när de är uppnådda. Detta kommer även komma mer naturligt när vi lyckats bryta ner User Stories i mindre komponenter och tasks, då det då blir tydligare att se när man lyckats eller inte.

Your acceptance tests, such as how they were performed and with whom
Hur ser det ut nu?
De acceptanstest som har utförts är test för att se om appens utvecklingsmiljö fungerar som den ska. Testet har gjorts genom att alla i gruppen har testat ifall appen går att starta genom visual studios på datorn samt ändrat något i koden för appen. Ändringar har exempelvis varit att ändra namn på en flik eller byta färg på någonting. Har denna ändring lyckats har testet setts som lyckat och en fungerande utvecklingsmiljö har uppnåtts.
Hur vill vi att det ska se ut?
Vi vill ha tydliga checklistor utifrån en dialog vi haft med end user för att kunna testa de ändringar vi gjort, så att de lever upp till de krav som ställs.
Hur vi kommer dit?
Genom att kommunicera med end user vid onsdagarnas möten så att tydliga definitioner kan göras kan vi sedan sätta upp en sprint som tar dessa definitioner i beaktning på så sätt att vi kan testa hur väl de delar som slutförs under sprinten stämmer överens mot det som gjort. 

The design of your application (choice of APIs, architecture patterns etc)
Vi har inte börjat designa applikationen ännu och därför är inte denna punkten gjord.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
Inte relevant denna veckan

The structural overview of your application (such as class diagrams, domain models or component diagrams)
Inte relevant denna veckan

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Epic 1: 
As a vessel captain I would like to be able to see a timeline over my planned trips, that is being updated continuously
User stories 1: 
Som en båt vill jag se en konceptuell över hur MyTrip skulle fungera för att kunna påverka funktionaliteten
Acceptance criteria: 
Skapa en modell för hur appen kan tänkas se ut.
Task breakdown: Skapa tre olika bilder i photoshop, en för varje del av appen; visa hur det ser ut i sidomenyn, visa hur det ser ut när man först klickar in i funktionen, visa hur det kan tänkas se ut när den fungerar som den ska.
Effort estimation: 30
Epic 3: 


The three KPIs you use for monitoring your progress
Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.
Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself


The roles you have used within the team
Vart är vi?
Denna veckan har vi använt Olle som Scrum-master. Denna veckan har vi heller ej använt oss utav några andra roller trots att vi definierat dessa i vårt social contract.
Hur vill vi att det ser ut?
Till nästa sprint vill försöka använda oss av de roller som vi har definierat i vårt social contact. Detta för att bättre organisera vårt arbete och skapa tydliga ansvarsfördelningar
Hur tar vi oss dit?
Det viktigaste sättet för att ta oss till den situation där vi har tydliga roller är genom att vi gemensamt måste bestämma oss för att verkligen använda dessa roller under vårt arbete. 

The agile practices you have used for the current sprint
Vi har använt oss av ett flertal möten under veckan för att kunna kontrollera var alla ligger i sina user stories, samt hjälpa varandra på de områden som kan vara svåra.
Hur ser det ut idag?
Vi har använt oss flitigt av scrum-metoder denna veckan, främst genom att vi haft kontinuerliga möten och hjälpt varandra på de områden som behövs. Då mycket fortfarande handlar om att förstå utvecklingsmiljön finns det stor potential att hjälpa varandra, vilket vi utnyttjat bra. Vi har även börjat lägga in en kontinuerlig reflektion, där vi gör små reflektioner av varje möte för att se fall vi använder oss av Scrum-metodiken väl. Vi har även lagt om vår sprint för att bättre passa end user och produktägaren.
Hur vill vi att situationen skall se ut?
Idealt sätt hade vi utnyttjat SCRUM och agil programvaruutveckling till en ännu högre grad, genom att få fram bättre och tydligare user stories och tydligare mål för varje medlem.
Hur tar vi oss dit?
Vi har som en kontinuerlig uppgift för alla medlemmar i gruppen att läsa på i boken om SCRUM för att utveckla vår kunskap inom området. Vi har även som mål att lyckas bryta ner samtliga user stories i mindre beståndsdelar och tasks, för att lättare kunna utnyttja det agila tänket under sprinten. 

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
5 timmar onsdag eftermiddag möte med produktägaren samt IT-hjälp med att få igång utvecklarmiljön
5 timmar möte fredag inom gruppen där vi gick igenom User stories och försökte bryta ner dem i tasks
5 timmar möte måndag där vi alla lyckades få igång utvecklarmiljön och började förstå appens funktionalitet, samt skapade en modell över MyTrip-user storien
3 timmar möte onsdag förmiddag där vi gick igenom och reflekterade över tidigare vecka, samt försökte fortsätta och omarbeta vissa user stories som visade sig vara icke-optimala.
2 timmar arbete individuellt på att läsa på om SCRUM och hur git fungerar.

Hur ser det ut idag:?
Vi spenderar mycket tid på att lära oss om hur funktionaliteten är i appen. Tyvärr inte lika mycket spenderas på att skapa värde för slutanvändaren (genom att utöka funktionaliteten i appen)
Hur vill vi att det ska se ut?
Idealt sätt hade vi spenderat en större andel av den tillgängliga tiden varje vecka på att skapa värde och utveckla appen
Hur tar vi oss dit?
Genom att utöka vår kunskap kring hur appen är uppbyggd samt fungerar, och skapa mer konkreta user stories kommer vi enklare kunna dela upp uppgifter mellan olika medlemmar i gruppen och fokusera mer tid på att skapa ny funktionalitet som är i linje med vad slutanvändaren efterfrågar.

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Vi fick bra feedback från både produktägaren och slutkunden när vi pratade om våra user stories, både på saker som vi hade prickat rätt på men vi blev även mer införstådda i saker som kanske inte är av största fokus. Vi visade upp mockup-bilder på en sida i appen som uppskattades.
Det vi vill göra till nästa review är att ha lyckats göra ändringar i appen så att vi på riktigt kan visa upp förändringar som vi har implementerat.
Nu har vi till slut fått igång git och borde däför kunna pusha kodändringar till vårt repo så att vi kan börja bygga vår version av appen. Detta borde möjliggöra att faktiskt kunna visa upp en förändrad app.
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Vi har blivit mer vana vid Trello och även GitHub så att vi effektivt kan fördela arbetsuppgifter. Vi har börjat med att koda i par.
Vi vill bli mer bekväma vid git och versionshanteringen för att utvecklingsflödet ska bli enklare och fokuset istället kan läggas på att addera värde till kund.
Vi får öva och testa oss fram för att bli bekväma vid git och dess kommandon.
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
Hur ser det ut i dagsläget: I dagsläget har vi läst måttligt i den tillgängliga litteraturen då de tekniska problemen de första veckorna legat i fokus för att få igång applikationen. Därför har reflektionerna inte kunnat hänvisa och relatera speciellt mycket till litteraturen. 
Hur vill vi att det ska se ut:  Vi vill vara mer insatta i kurslitteraturen och därigenom eliminera många frågor som vi inte hade behövt ha.
Nu när de tekniska problemen till stor del är undanröjda kan vi lägga mer tid på att sätta oss in i litteraturen och öka vår kunskap.


Team Reflection Week 4 2018-05-02:
Team Reflection-Sprint 3
The chosen scope of the application under development including priority of features and for whom you are creating value.
Hur ser det ut nu:
I dagsläget har applikationen i princip samma funktioner som grundversionen med små tillägg som mest är för utvecklingstester. Vi har fortsatt jobbat på att få igång och lära oss utvecklingsmiljön vilket är ett krav för att vi ska kunna lösa de funktioner som efterfrågas av end-user samt produktägare. 
Hur vill vi att det ska se ut: 
Vi har kommit till ett stadie nu där vi börjar få grepp om utvecklingsmiljön men vi har samtidigt fortfarande svårigheter med att förstå vissa moment som behövs för att kunna helt utveckla de funktioner som efterfrågas. Vi är fortfarande inte helt säkra på att alla våra funktioner kommer gå att implementera och att det skapar något värde för slutanvändaren. 
Hur tar vi oss dit?
Som sagt så måste vi förtydliga vissa saker med produktägarna gällande vilka funktioner som ska implementeras. Med detta hoppas vi kunna sätta ett rimligt scope för kommande sprint. 

Our social contract
Hur ser det ut nu:
Sociala kontraktet har inte förändrats något denna veckan, men på grund av röda dagar samt väldigt mycket att göra i andra kursen så har vi inte haft ett möte på måndagen.
Hur vill vi att det ska se ut:
Vi vill och hoppas kunna vara bättre på att följa kontraktet framöver och samtidigt kunna kompensera för förlorad tid.
Hur tar vi oss dit:
Vi kommer att dels behöva prioritera om vår tid och samtidigt hitta en balans mellan kurserna. Med det sagt så kommer majoriteten av gruppen ha mer tid framöver eftersom att kandidatarbetet börjar dra ihop sig. 

The success criteria for the team in terms of what you want to achieve with your application
Hur ser det ut idag?
Vi har gjort våra user stories mer tydliga vilket gör att det är lättare att förstå när denna är uppfylld. Dock finns det fortfarande vissa user stories som kan ses som lite “luddiga” och svåra att veta när vi klarat av eller inte. 
Hur vill vi att det ska se ut?
Optimalt skulle vara att vi vet exakt när alla user stories är uppfyllda och exakt vilken funktion som ska tillföras och kunna testas för att user stories ska ses som uppfyllda. 
Hur kommer vi dit?
För att komma dit ska vi ha bra kommunikation i gruppen så att alla är med på vad som menas med våra user stories och vilken funktionalitet som ska läggas till. Vi måste även tänka på att skriva konkreta user stories samt success criterias så att det är solklart när dessa är nådda. 

Your acceptance tests, such as how they were performed and with whom
Vi har inte gjort några acceptanstest denna i veckan så denna frågan är irrelevant för denna veckas reflektion. 

The design of your application (choice of APIs, architecture patterns etc)
Inte relevant för veckans sprint

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
Inte relevant för veckans sprint

The structural overview of your application (such as class diagrams, domain models or component diagrams)
Inte relevant för veckans sprint

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Bifogar bilder på detta.
Veckans scope var alldeles för stort och ambitiöst, speciellt med tanke på röda dagar, klämdag samt mycket att göra i kandidaten. 
Detta resulterade i att vi inte fick gjort alls något av det vi hade planerat. Vi har historiskt haft en väldigt ambitiös bild över 
vad vi vill ha gjort, vilket resulterar i att gruppen har känt sig stressad över att inte kommit så långt som vi velat. Denna 
stressen resulterar i sin tur i ett överambitiöst scope, vilket gör att vi har svårigheter att utvärdera vår velocity och effort. 
Vi vill istället uppnå ett mer realistiskt scope vid sprintplaneringen för att lättare kunna utvärdera velocity och scope, samt för 
att inte bidra till den ökade stressen. För att uppnå detta planerar vi att, i samråd med produktägare, ha ett väldigt smalt scope och 
istället utveckla scopet om det skulle behövas. Vi prövar alltså ett motsatt approach till hur vi gjort hittils, där vi haft ett 
jättebrett scope.
Vidare är det svårt att utvärdera hur väl våra acceptance criteria fungerade då vi ej nådde dem vilket så klart hänger ihop med att 
vi satt våra criterias och scope alldeles för stora. Vi vill i framtiden ha mer relevanta acceptance criterias som vi tror att vi kan 
nå. Detta gör vi genom att sätta ett mer rimligt scope som är bättre anpassad till våra verkliga velocity.

The three KPIs you use for monitoring your progress
Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary 
thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our 
goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.

Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if 
you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
Inte relevant för denna veckan.

The roles you have used within the team
Vart är vi?
Denna veckan har vi använt Jonathan som Scrum-master. Vi har i dagsläget ej använt oss utav några andra roller trots att vi 
definierat dessa i vårt social contract.
Hur vill vi att det ser ut?
Till nästa sprint vill försöka använda oss av de roller som vi har definierat i vårt social contract. Detta för att bättre 
organisera vårt arbete och skapa tydliga ansvarsfördelningar. Detta mål blir förhoppningsvis lättare att leverera eftersom att 
vi kommer ha mindre att göra i andra kursen. 
Hur tar vi oss dit?
Vi kanske bör se över de roller som finns i det sociala kontraktet. Det viktigaste sättet för att ta oss till den situation där vi har tydliga roller är genom att vi gemensamt måste bestämma oss för att verkligen använda dessa roller under vårt arbete. Här anser vi också att vår SCRUM-master har en viktig roll då vi har gett denne ansvaret att fördela roller.

The agile practices you have used for the current sprint
Var är vi?
Nu har vi kört ett system med möte 3 ggr i veckan, fredag, måndag och onsdag där vi på alla möten dokumenterar och reflekterar kort. 
Utvärderingsdelen har vi fått öva mycket på då vi har fått revidera en stor del av projektet, som vårt scope till velocity. Velocityn 
för sprinten var satt alldeles för hög. Antaganden som den baserades på gällde inte, vilket kan förklaras till viss del av gruppens 
stress över att realisera stories. Tekniska problem bl.a. har tidigare lett till att vi inte är där vi enligt vårt gamla scope vill vara. 
Dåliga insikter om vår tillgänglighet under veckan var också bidragande till att vår velocity var för hög. första maj + valborg gjorde 
att vår tillgängliga tid var mindre än antaget. 

Hur vill vi att det ska se ut?
Vi vill på grund av stress bedömt vår velocity och effort esitimation bättre för att på ett bättre sätt kunna utföra vår nästa sprint. Samtidigt vill vi också förbättra vår utvärdering och iterationsförfarande. 

Hur ska vi nå detta?
Detta gör vi genom att vara mer realistiska när vi uppskattar vår velocity och effort vilket vi nämnt tidigare. För att förbättra vår 
utvärderingsförfarande kommer vi att efter varje gång vi ses försöka att reflektera mer hur vi har gått. Då vi tidigare haft överskattat 
vår velocity ganska mycket har vi valt att istället vara pessimisstiska denna gången för att se vart vi hamnar denna gången.

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
Vart är vi?
Den här veckan har endast 10h spenderats på grund av valborg, 1a maj samt en del slutspurter i kandidaten. Detta resulterar i att vi inte 
fick gjort lika mycket som vi hade planerat. Vi kommer att nästkommande vecka göra upp för detta genom att lägga 30h/person när vi det 
(förhoppningsvis) är mindre med kandidaten.
3 timmar första onsdagen - startmöte för sprinten. Specificerade user stories och vad vi ville ha gjort under veckan.
2 timmar andra onsdagen - Review över hur veckan har gått samt
5 timmar fredag - jobba med user stories och få utvecklarmiljön att fungera på samtliga datorer. Även lärt oss hur git fungerar så vi kan 
använda versionshantering
Vart vill vi?
Vi vill nästa vecka ha ett mer jämnt och realistiskt arbetsflöde där vi bättre har uppskattat hur mycket tid vi kommer att kunna använda 
oss utav. 
Vi vill i största möjliga grad hålla 20h per person och veca
Hur tar vi oss dit.
Detta kommer vi att göra genom att på uppstartsmötet/ sprintplanningen på onsdagen att gå igenom allas kalendrar och vara mycket ärliga 
när vi planerar för att undvika att vi hamnar i samma situation som denna veckan.


The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Vart är vi?
Under punkten user stories beskrivs nuläget i ganska bra detalj, främst att planeringen av scopet inte var speciellt bra. Dels för att 
scopet var för brett men även för att vi var överambitiösa gällande hur mycket tid vi trodde vi skulle kunna lägga ner på programmeringen. 
Vi har dock lyckats med ett delmål - att få igång utvecklarmiljön samt versionshantering på samtliga datorer så att möjligheterna för att 
utveckla appen finns där. 
Vart vill vi?
Vi skulle vilja spendera en större andel av tiden att faktiskt utveckla och leverera något konkret. 
Hur tar vi oss dit?
Vi planerar att ta oss dit genom att ha ett mer realistiskt scope samt tidsplanera bättre så att tiden vi lägger på kursen utnyttjas 
optimalt. Vi har även konkretiserat user stories till högre grad för att på så sätt kunna dela upp dem och utnyttja parprogrammeringen 
mer effektivt. 
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Vart är vi?
Vi har börjat använda oss av git som versionshantering. Detta var utmanande för gruppen då det är en helt ny teknik vi inte använt oss av 
tidigare, vilket betyder att vi var tvugna att lära oss nya kommandon osv. I dagsläget har vi fått igång det grundläggande med git.
Vart vill vi?
 Vi önskar att få ökad förståelse och kan använda den fulla funktionaliteten av branches osv. 
Hur tar vi oss dit?
Detta kommer uppnås dels genom trial and error, dvs. vi använder git i praktiken och försöker lära oss genom det, men även genom att 
gruppmedlemmarna ska försöka läsa på om området.
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
Hur ser det ut idag?
Idag har vi inte full koll på litteratur kopplat till SCRUM, vi var mycket bättre under prepveckorna på att läsa på och skapa förståelse 
för hur man arbetar med SCRUM.  De senaste veckorna har mer legat på tekniska bitar och timmarna vi har på den här kursen har gått åt 
till att få igång en utvecklingsmiljö för att vi så fort som möjligt ska kunna skapa värde åt slutanvändaren. 
Med hjälp av litteratur samt med hjälp av Pontus och klasskamrater har vi lyckats åstadkomma en gemensam repository som vi pushar till. 
Var vill vi komma?
Vi vill arbeta efter SCRUM och kunna applicera litteraturen på sättet vi arbetar på. Om vi gör det tror vi att vårt arbete kommer få 
färre problem med och gå mer smärtfritt än förut. Osäkerheten i gruppen har även varit väldigt stor och ingen vet riktigt vad dom ska göra. Ifall vi kan komma igång med ett bättre SCRUM-tänk tror vi att osäkerheten kommer reduceras och hela gruppen kommer prestera bättre. 
Hur kommer vi dit?
Vi behöver ta hjälp av kursansvariga och samtidigt läsa mer av den litteratur som finns på kurshemsidan. På onsdagar har vi ett ypperligt 
tillfälle att fråga examinator och kursansvariga om hjälp relaterat till just litteratur och SCRUM-frågor. 






