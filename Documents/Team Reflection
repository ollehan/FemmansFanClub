
Team reflection

Week 1 2018-03-20:

The chosen scope of the application under development including priority of features and for whom you are creating value
* We are not able to answer this question since we have not yet been briefed by our clients and stakeholders

Our social contract, which means you should create one in the first week
* Weekly meetings are Monday, Wednesday and Friday. 
* Meeting on monday is for planning the weekly activities and dividing the sprint up between members.
* Meeting on Wednesday has the main purpose of making sure everyone is on track and see if someone is in need of help.
* Meeting on Friday is for finishing the spring and reflecting on the past weeks activities.
* Each one has responsbility for the given task divided by the group
    - This implies that you either have to solve the task or ask for help if you cannot solve the problem yourself/ in the couple
* The programming part will be done in pairs of two in order to maximize our problem solving ability. However, this will not be a strict division but as guideline for the project. At our meetings the whole group will help each other if stuck at a problem.
* Group Roles
    - Project Developer
    - Scrum master
    - Team member - Developer

The success criteria for the team in terms of what you want to achieve with your application
* For the application to be deemed successful by the team it is important that the perceived value of the recipient is in line with expectations on the application both in regards to quality and the features included. For this to be possible it is important to maintain expectations during the projects progress since there is a limited amount of time to work with and initial expectations might not be manageable within the limitations. 

Your acceptance tests, such as how they were performed and with whom
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The design of your application (choice of APIs, architecture patterns etc)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The structural overview of your application (such as class diagrams, domain models or component diagrams)
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The three KPIs you use for monitoring your progress
* Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
* Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
* Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.


Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The roles you have used within the team
* Since the project hasn’t been chosen and started yet, we cannot reflect on this point.

The agile practices you have used for the current sprint
* As this is still a prep phase the sprint hasn’t started yet. We have instead started planning on how to perform agile practices during our coming sprints (e.g. pair programming, sharing/helping other programmers etc.)

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
* Lecture monday 4h
* Lecture wednesday 4h
* Meeting tuesday 2018-03-20 4h
* Individual writing reflection and reading up on scrum theory 4h

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
* We haven’t completed an official sprint this week so we didn’t do a sprint review.

Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
* We are going to use GITHUB for version control.
* To coordinate our planned meetings and working time a shared Google Calendar will be used
* For documentation of meetings a Google drive calendar will be used 
* TODO: Update with further relevant tools

Relation to literature and guest lectures (how do your reflections relate to what others have to say?)
* We have used some of the concepts such as KPI’s from the lectures on monday the 19th of March, the scrum concept will be applied throughout the project.



Team Reflection-week 2

The chosen scope of the application under development including priority of features and for whom you are creating value.
 * We have received a vessel business operator. We will adapt the app PortableCDM to suit the environment of a vessel. 
Our social contract
 *The social contract has been somewhat modified this week due to Easter break. Also because of the fact that the assignment was not received until wednesday we have not been able to work with the assignment other than reflect and discuss it. 
The success criteria for the team in terms of what you want to achieve with your application
 *We feel like last weeks explanation of a successful project remains the same for this week, 
 *For the application to be deemed successful by the team it is important that the perceived value of the recipient is in line with expectations on the application both in regards to quality and the features included. For this to be possible it is important to maintain expectations during the projects progress since there is a limited amount of time to work with and initial expectations might not be manageable within the limitations.
Your acceptance tests, such as how they were performed and with whom
 *Since the project was received on wednesday we have not had the chance to perform any acceptance tests. 
The design of your application (choice of APIs, architecture patterns etc)
 *Since the project was received on wednesday we have not had the chance to reflect on the design of the application.  
The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The structural overview of your application (such as class diagrams, domain models or component diagrams)
 *Since the project hasn’t been started yet, we cannot reflect on this point.
Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The three KPIs you use for monitoring your progress
 *Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
 *Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
 *Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.
Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
 *Since the project hasn’t been started yet, we cannot reflect on this point.
The roles you have used within the team
 *The roles this week have basically been the same for all participants of this group. We have spent most of the time reading about the project.
The agile practices you have used for the current sprint
 *As this is still a prep phase the sprint hasn’t started yet. We have continued to plan how to perform agile practices during our coming sprints (e.g. pair programming, sharing/helping other programmers etc.)
The time you have spent on the course (so keep track of your hours so you can describe the current situation)
 *Lecture monday 2h
 *Lecture wednesday 2h
 *Meeting Thursday 4h
Individual writing and reflection 4h
The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
We haven’t completed an official sprint this week so we didn’t do a sprint review.
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
 We are going to use GITHUB for version control where
To coordinate our planned meetings and working time a shared Google Calendar will be used
For documentation of meetings a Google drive calendar will be used 
For communcation between meetings we created a Facebook-chat.
TODO: Update with further relevant tools
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
We have used some of the concepts such as KPI’s from the lectures on monday the 19th of March, the scrum concept will be applied throughout the project. Now when we have gotten some more info about the project, we understand it might be hard to see/understand how the  final version of the application will be. The development will be an ongoing process. The aim is to use the KATA-principle as much as possible. 

Team Reflection Week 3 2018-04-13:

The chosen scope of the application under development including priority of features and for whom you are creating value
* This week we have tried setting up the programming environment and the technical solutions required for creating the application for all team members.
This includes setting up
Android Studio
Expo
Git
Visual Studio(for creating JavaScript)
Node.js
Further, we have set up Trello for working with the backlog and the sprintlog. We have created a group where we will keep our user stories

We have also began analyzing the scenario and together with end user(vessel) we have started to break down the tasks to figure out what relevant functions the applications should contain and also the priority of the functions. 

Our social contract, which means you should create one in the first week
* This week we didn’t follow the social contract completely because we didn’t have a monday meeting as scheduled. This was due to a deadline in the bachelor thesis, .though we compensated the missed monday meeting by working during the easter break.
* The others parts of the contract have been followed accordingly.
* This week John was Scrum master.

The success criteria for the team in terms of what you want to achieve with your application
* Our success criteria for this week was to successfully get the programme environment successfully set up. We were not successful on this point, due to having several problems with the mac computers, namely getting the NPM install running. 

Your acceptance tests, such as how they were performed and with whom
* The acceptance test for this week was being able to run the application (portableCDM) running on every team members computer. As mentioned above, they were unsuccessful. 

The design of your application (choice of APIs, architecture patterns etc)
* We didn’t design anything this week, so this question cannot be answered.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
* We didn’t design anything this week, so this question cannot be answered.

The structural overview of your application (such as class diagrams, domain models or component diagrams)
* We didn’t design anything this week, so this question cannot be answered.

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
1. Explanation: As a team member, i would like to set up the programming environment
Acceptance criteria: Getting the application running (portablecdm) on every team members computer
Task breakdown: Install following through guidance of the readme-file provided on the coursepage: 
Android Studio
Expo
Git
Visual Studio(for creating JavaSctript)
Node.js
Effort estimation: 100 
2. Explanation: As a team member I want to be able to output a single text message through the application.
Acceptance criteria: Outputing a text message
Task breakdown: Learning the required java script, successfully completing user story 1, programming the method the text message output.
Effort estimation: 60
3. Explanation: Accessing prices from different ship agents in a given port.
Acceptance criteria: Being able to see only prices from relevant ship agents in portablecdm.
Task breakdown: Not yet known, yet to figure out.
Effort estimation: 400
4. Explanation: As a vessel i need to be able to send estimated arrival time as a stamp. 
Acceptance Criteria: Being able to send a time-stamp to a recepient. 
Task Breakdown: Not yet known, yet to figure out. 
Effort estimation: 200

The three KPIs you use for monitoring your progress
* Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
* Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
* Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.


Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
No code has yet been written, thus this is not relevant for reflection

The roles you have used within the team
Scrum-master: John
User-story responsibles: Olle & Fredrik
Developers: Rebecca & Johan
Acceptance criteria testers: Emil, Jonathan and Niklas

The agile practices you have used for the current sprint
User-stories
Backlog
Sprintlog
Iteration withing testing the acceptance criteria



The time you have spent on the course (so keep track of your hours so you can describe the current situation)
Tuesday:
8 hours spent installing and setting up the programming interface and the environment
Wednesday:
4 hours spent with Open arena contacting end-user, product owner etc.
2 hours spent with setting up the application interface
Friday
2 hours spent on performing user-stories
2,5 hours weekly review of performance

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Setting up the programming environment: We have not succeeded to meet the acceptance criteria for this task since no one has yet been able to run the app successfully. Although we have not completeted the whole user-story we have managed to complete some of the tasks included. E.g. install android studio, install GIT
Further, we have been able to better understand how to handle user-stories by using the Trello software

Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Trello will be used for user-stories
Microsoft Visual will be used for handling the java-scripts
For the sprint-planning we will print the user-stories and perform the ranking and choice of what to include in the sprint

Relation to literature and guest lectures (how do your reflections relate to what others have to say?)
We have studied the ScrumXP litterature and read the first 5 chapters. From these chapters we have learnt how to perform sprint planning, setting up the backlog and sprintlog and further how to rank user-stories importance and scope.


Team Reflection Week 4 2018-04-25:

Team Reflection-Sprint 2

The chosen scope of the application under development including priority of features and for whom you are creating value.
Vi har denna veckan lagt mycket fokus på vår Epic-User Story 3. Denna har målet att alla gruppmedlemmar ska lära sig programmeringsarktitekturen samt att använda sig utav de olika programmen som är nödvändiga för att dels utveckla appen samt för att kunna använda sig utav den agila metodiken och SCRUM.
Denna vecka har vi även börjar med vår utveckling av de funktioner som anses skapa värde för end-user och produktägare. Detta har gjorts genom att dela upp ansvaret för två andra Epics som vi har samt att vi börjat bekanta oss med appens tekniska funktioner. Vi även börjar lägga till funktioner för att lära oss hur detta fungerar.
Detta kan sammanfattas genom följande beskrivning
Vart är vi idag?
Vi är fortfarande i uppstartsfasen där vi håller på och lär oss de nödvändiga programmeringskunskaperna och utvecklingsverktygen som är lämpliga för att kunna leverera värde till våra stakeholders. Vi har idag bättre på koll på Scrum-metodiken än tidigare men vi känner samtidigt att vi saknar en del av den kunskap och kompetenser som vi känner att vi bör ha för att på ett bättre sätt kunna utföra sprintarna och utvärdera dessa.
Vart vill vi?
Vi vill komma till det stadie att vi känner att vi har koll på hur programmeringsmiljö fungerar samt att vi vet hur vi på ett bra ska angripa de problem vi stöter på när vi ska försöka implementera den funktionalitet som ges av våra user-story. Gällande Scrum-metodiken vill vi få en bättre förståelse för denna och speciellt vid hur valet av user stories, backlog, sprint log samt velocity bör utföras. Detta då vi känner att detta är något som skapar problem för oss idagsläget.
Hur tar vi oss dit?
Vi tar oss dit genom att fortsätta lära oss mer om programmeringsspråket samt då bättre förstå Java-script om hur appen är upplagd. Det är även nödvändigt att vi fortsätter vårt arbete med att lära oss mer om Scrum-metodiken vilket vi kör genom att fortsätta vår studie av den givna litteraturen.

Our social contract
Efter ett samtal med Jan-Philipp i förra onsdagen så bestämde vi oss för att byta sprintstart från måndag till onsdag. Detta kommer att gynna kommande sprints eftersom vi kommer kunna ha tillgång till produktägare/end-user/ansvariga lärare under både sprint planning meeting samt under sprint review. Detta innebär att sprint två fick förlängas med en halv vecka. Vidare har vi bestämt oss för att efter varje möte/kodtillfälle utvärdera och anteckna de problem vi har haft samt hur vi hade kunnat arbeta bättre. 
Hur ser det ut nu?
Måndag-till-till måndag sprints och ingen kontinuerlig reflektion. Detta medför svårigheter det är flera inblandade aktörer som bör vara med och bestämma hur sprinten ser ut för att uppnå bästa möjliga resultat. En av dessa är produktägaren, som vi bara har tillgång till på onsdagar. Att vi inte för någon Kontinuerlig reflektion medför svårigheter i skrivandet av den slutliga reflektionen för sprinten. Det är svårt att komma ihåg alla problem vi haft i detalj. 
Hur vill vi att det ska se ut?
Vi vill att produktägare/end-user/ansvariga lärare ska finnas tillgängliga under sprint planning meeting och dessutom kunna ge input/feedback på det som har åstadkommits i form av kod samt även reflektion. Detta är även en perfekt möjlighet att få vägledning i hur vi arbetar med scrum, målet är att kontinuerligt under sprinten reflektera över hur det går, samt hur vi kan göra det bättre. 
Hur kommer vi dit?
För att få med produktägare, end-user samt ansvariga lärare kommer vi ändra dag för att starta en ny sprint från måndag till onsdag. Vi kommer även börja anteckna våra reflektioner efter varje möte/kodtillfälle. Vårt social contract kommer uppdateras för att få med dessa förändringar. 

The success criteria for the team in terms of what you want to achieve with your application
Hur det ser ut idag?
Vi har i dagsläget inga tydliga mått på hur vi kan mäta samt utvärdera vår prestation, förutom att “bocka av” user stories som vi har gjort. Genom att ha mer konkreta mått på prestationen kommer vi lättare kunna se vad som behövs förbättras för att gruppen ska fungera bättre. En stor anledning till varför det är såhär är eftersom hittills har våra User stories inte varit tillräckligt tydliga och alldeles för abstrakta. Detta kan härledas till att de hittills bestått av att vi som grupp ska sträva efter att lära oss mer om utvecklarmiljön för att i slutändan kunna skapa värde för kund.
Hur vill vi att situationen ska se ut: Ha mer tydliga mått på när vi har “lyckats” med en deluppgift, uppgift eller sprint, för att tydliggöra vilka områden vi behöver jobba på.
Hur ska vi ta oss dit?
Genom samråd med handledare/examinator samt diskussion i gruppen kommer tydligare mål kunna sättas upp, som är enkla att mäta när de är uppnådda. Detta kommer även komma mer naturligt när vi lyckats bryta ner User Stories i mindre komponenter och tasks, då det då blir tydligare att se när man lyckats eller inte.

Your acceptance tests, such as how they were performed and with whom
Hur ser det ut nu?
De acceptanstest som har utförts är test för att se om appens utvecklingsmiljö fungerar som den ska. Testet har gjorts genom att alla i gruppen har testat ifall appen går att starta genom visual studios på datorn samt ändrat något i koden för appen. Ändringar har exempelvis varit att ändra namn på en flik eller byta färg på någonting. Har denna ändring lyckats har testet setts som lyckat och en fungerande utvecklingsmiljö har uppnåtts.
Hur vill vi att det ska se ut?
Vi vill ha tydliga checklistor utifrån en dialog vi haft med end user för att kunna testa de ändringar vi gjort, så att de lever upp till de krav som ställs.
Hur vi kommer dit?
Genom att kommunicera med end user vid onsdagarnas möten så att tydliga definitioner kan göras kan vi sedan sätta upp en sprint som tar dessa definitioner i beaktning på så sätt att vi kan testa hur väl de delar som slutförs under sprinten stämmer överens mot det som gjort. 

The design of your application (choice of APIs, architecture patterns etc)
Vi har inte börjat designa applikationen ännu och därför är inte denna punkten gjord.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
Inte relevant denna veckan

The structural overview of your application (such as class diagrams, domain models or component diagrams)
Inte relevant denna veckan

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Epic 1: 
As a vessel captain I would like to be able to see a timeline over my planned trips, that is being updated continuously
User stories 1: 
Som en båt vill jag se en konceptuell över hur MyTrip skulle fungera för att kunna påverka funktionaliteten
Acceptance criteria: 
Skapa en modell för hur appen kan tänkas se ut.
Task breakdown: Skapa tre olika bilder i photoshop, en för varje del av appen; visa hur det ser ut i sidomenyn, visa hur det ser ut när man först klickar in i funktionen, visa hur det kan tänkas se ut när den fungerar som den ska.
Effort estimation: 30
Epic 3: 


The three KPIs you use for monitoring your progress
Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.
Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself


The roles you have used within the team
Vart är vi?
Denna veckan har vi använt Olle som Scrum-master. Denna veckan har vi heller ej använt oss utav några andra roller trots att vi definierat dessa i vårt social contract.
Hur vill vi att det ser ut?
Till nästa sprint vill försöka använda oss av de roller som vi har definierat i vårt social contact. Detta för att bättre organisera vårt arbete och skapa tydliga ansvarsfördelningar
Hur tar vi oss dit?
Det viktigaste sättet för att ta oss till den situation där vi har tydliga roller är genom att vi gemensamt måste bestämma oss för att verkligen använda dessa roller under vårt arbete. 

The agile practices you have used for the current sprint
Vi har använt oss av ett flertal möten under veckan för att kunna kontrollera var alla ligger i sina user stories, samt hjälpa varandra på de områden som kan vara svåra.
Hur ser det ut idag?
Vi har använt oss flitigt av scrum-metoder denna veckan, främst genom att vi haft kontinuerliga möten och hjälpt varandra på de områden som behövs. Då mycket fortfarande handlar om att förstå utvecklingsmiljön finns det stor potential att hjälpa varandra, vilket vi utnyttjat bra. Vi har även börjat lägga in en kontinuerlig reflektion, där vi gör små reflektioner av varje möte för att se fall vi använder oss av Scrum-metodiken väl. Vi har även lagt om vår sprint för att bättre passa end user och produktägaren.
Hur vill vi att situationen skall se ut?
Idealt sätt hade vi utnyttjat SCRUM och agil programvaruutveckling till en ännu högre grad, genom att få fram bättre och tydligare user stories och tydligare mål för varje medlem.
Hur tar vi oss dit?
Vi har som en kontinuerlig uppgift för alla medlemmar i gruppen att läsa på i boken om SCRUM för att utveckla vår kunskap inom området. Vi har även som mål att lyckas bryta ner samtliga user stories i mindre beståndsdelar och tasks, för att lättare kunna utnyttja det agila tänket under sprinten. 

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
5 timmar onsdag eftermiddag möte med produktägaren samt IT-hjälp med att få igång utvecklarmiljön
5 timmar möte fredag inom gruppen där vi gick igenom User stories och försökte bryta ner dem i tasks
5 timmar möte måndag där vi alla lyckades få igång utvecklarmiljön och började förstå appens funktionalitet, samt skapade en modell över MyTrip-user storien
3 timmar möte onsdag förmiddag där vi gick igenom och reflekterade över tidigare vecka, samt försökte fortsätta och omarbeta vissa user stories som visade sig vara icke-optimala.
2 timmar arbete individuellt på att läsa på om SCRUM och hur git fungerar.

Hur ser det ut idag:?
Vi spenderar mycket tid på att lära oss om hur funktionaliteten är i appen. Tyvärr inte lika mycket spenderas på att skapa värde för slutanvändaren (genom att utöka funktionaliteten i appen)
Hur vill vi att det ska se ut?
Idealt sätt hade vi spenderat en större andel av den tillgängliga tiden varje vecka på att skapa värde och utveckla appen
Hur tar vi oss dit?
Genom att utöka vår kunskap kring hur appen är uppbyggd samt fungerar, och skapa mer konkreta user stories kommer vi enklare kunna dela upp uppgifter mellan olika medlemmar i gruppen och fokusera mer tid på att skapa ny funktionalitet som är i linje med vad slutanvändaren efterfrågar.

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Vi fick bra feedback från både produktägaren och slutkunden när vi pratade om våra user stories, både på saker som vi hade prickat rätt på men vi blev även mer införstådda i saker som kanske inte är av största fokus. Vi visade upp mockup-bilder på en sida i appen som uppskattades.
Det vi vill göra till nästa review är att ha lyckats göra ändringar i appen så att vi på riktigt kan visa upp förändringar som vi har implementerat.
Nu har vi till slut fått igång git och borde däför kunna pusha kodändringar till vårt repo så att vi kan börja bygga vår version av appen. Detta borde möjliggöra att faktiskt kunna visa upp en förändrad app.
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Vi har blivit mer vana vid Trello och även GitHub så att vi effektivt kan fördela arbetsuppgifter. Vi har börjat med att koda i par.
Vi vill bli mer bekväma vid git och versionshanteringen för att utvecklingsflödet ska bli enklare och fokuset istället kan läggas på att addera värde till kund.
Vi får öva och testa oss fram för att bli bekväma vid git och dess kommandon.
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
Hur ser det ut i dagsläget: I dagsläget har vi läst måttligt i den tillgängliga litteraturen då de tekniska problemen de första veckorna legat i fokus för att få igång applikationen. Därför har reflektionerna inte kunnat hänvisa och relatera speciellt mycket till litteraturen. 
Hur vill vi att det ska se ut:  Vi vill vara mer insatta i kurslitteraturen och därigenom eliminera många frågor som vi inte hade behövt ha.
Nu när de tekniska problemen till stor del är undanröjda kan vi lägga mer tid på att sätta oss in i litteraturen och öka vår kunskap.


Team Reflection Week 5 2018-05-02:
Team Reflection-Sprint 3
The chosen scope of the application under development including priority of features and for whom you are creating value.
Hur ser det ut nu:
I dagsläget har applikationen i princip samma funktioner som grundversionen med små tillägg som mest är för utvecklingstester. Vi har fortsatt jobbat på att få igång och lära oss utvecklingsmiljön vilket är ett krav för att vi ska kunna lösa de funktioner som efterfrågas av end-user samt produktägare. 
Hur vill vi att det ska se ut: 
Vi har kommit till ett stadie nu där vi börjar få grepp om utvecklingsmiljön men vi har samtidigt fortfarande svårigheter med att förstå vissa moment som behövs för att kunna helt utveckla de funktioner som efterfrågas. Vi är fortfarande inte helt säkra på att alla våra funktioner kommer gå att implementera och att det skapar något värde för slutanvändaren. 
Hur tar vi oss dit?
Som sagt så måste vi förtydliga vissa saker med produktägarna gällande vilka funktioner som ska implementeras. Med detta hoppas vi kunna sätta ett rimligt scope för kommande sprint. 

Our social contract
Hur ser det ut nu:
Sociala kontraktet har inte förändrats något denna veckan, men på grund av röda dagar samt väldigt mycket att göra i andra kursen så har vi inte haft ett möte på måndagen.
Hur vill vi att det ska se ut:
Vi vill och hoppas kunna vara bättre på att följa kontraktet framöver och samtidigt kunna kompensera för förlorad tid.
Hur tar vi oss dit:
Vi kommer att dels behöva prioritera om vår tid och samtidigt hitta en balans mellan kurserna. Med det sagt så kommer majoriteten av gruppen ha mer tid framöver eftersom att kandidatarbetet börjar dra ihop sig. 

The success criteria for the team in terms of what you want to achieve with your application
Hur ser det ut idag?
Vi har gjort våra user stories mer tydliga vilket gör att det är lättare att förstå när denna är uppfylld. Dock finns det fortfarande vissa user stories som kan ses som lite “luddiga” och svåra att veta när vi klarat av eller inte. 
Hur vill vi att det ska se ut?
Optimalt skulle vara att vi vet exakt när alla user stories är uppfyllda och exakt vilken funktion som ska tillföras och kunna testas för att user stories ska ses som uppfyllda. 
Hur kommer vi dit?
För att komma dit ska vi ha bra kommunikation i gruppen så att alla är med på vad som menas med våra user stories och vilken funktionalitet som ska läggas till. Vi måste även tänka på att skriva konkreta user stories samt success criterias så att det är solklart när dessa är nådda. 

Your acceptance tests, such as how they were performed and with whom
Vi har inte gjort några acceptanstest denna i veckan så denna frågan är irrelevant för denna veckas reflektion. 

The design of your application (choice of APIs, architecture patterns etc)
Inte relevant för veckans sprint

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
Inte relevant för veckans sprint

The structural overview of your application (such as class diagrams, domain models or component diagrams)
Inte relevant för veckans sprint

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Bifogar bilder på detta.
Veckans scope var alldeles för stort och ambitiöst, speciellt med tanke på röda dagar, klämdag samt mycket att göra i kandidaten. 
Detta resulterade i att vi inte fick gjort alls något av det vi hade planerat. Vi har historiskt haft en väldigt ambitiös bild över 
vad vi vill ha gjort, vilket resulterar i att gruppen har känt sig stressad över att inte kommit så långt som vi velat. Denna 
stressen resulterar i sin tur i ett överambitiöst scope, vilket gör att vi har svårigheter att utvärdera vår velocity och effort. 
Vi vill istället uppnå ett mer realistiskt scope vid sprintplaneringen för att lättare kunna utvärdera velocity och scope, samt för 
att inte bidra till den ökade stressen. För att uppnå detta planerar vi att, i samråd med produktägare, ha ett väldigt smalt scope och 
istället utveckla scopet om det skulle behövas. Vi prövar alltså ett motsatt approach till hur vi gjort hittils, där vi haft ett 
jättebrett scope.
Vidare är det svårt att utvärdera hur väl våra acceptance criteria fungerade då vi ej nådde dem vilket så klart hänger ihop med att 
vi satt våra criterias och scope alldeles för stora. Vi vill i framtiden ha mer relevanta acceptance criterias som vi tror att vi kan 
nå. Detta gör vi genom att sätta ett mer rimligt scope som är bättre anpassad till våra verkliga velocity.

The three KPIs you use for monitoring your progress
Customer satisfaction - We have yet to decide exactly how we are going the evaluate the customer satisfaction, but our preliminary 
thoughts are dividing customer satisfaction into different categories and then giving score on a scale from 1-10.
Velocity - Interesting to see how our programming skills develops as we get deeper into the project. 
Defects - In order to measure how well the software works we are going to measure the e.g. accumulated defects in the code. Our 
goal is to measure number of defects each monday morning and then compare it with the number of defects in the end of the week.

Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if 
you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
Inte relevant för denna veckan.

The roles you have used within the team
Vart är vi?
Denna veckan har vi använt Jonathan som Scrum-master. Vi har i dagsläget ej använt oss utav några andra roller trots att vi 
definierat dessa i vårt social contract.
Hur vill vi att det ser ut?
Till nästa sprint vill försöka använda oss av de roller som vi har definierat i vårt social contract. Detta för att bättre 
organisera vårt arbete och skapa tydliga ansvarsfördelningar. Detta mål blir förhoppningsvis lättare att leverera eftersom att 
vi kommer ha mindre att göra i andra kursen. 
Hur tar vi oss dit?
Vi kanske bör se över de roller som finns i det sociala kontraktet. Det viktigaste sättet för att ta oss till den situation där vi har tydliga roller är genom att vi gemensamt måste bestämma oss för att verkligen använda dessa roller under vårt arbete. Här anser vi också att vår SCRUM-master har en viktig roll då vi har gett denne ansvaret att fördela roller.

The agile practices you have used for the current sprint
Var är vi?
Nu har vi kört ett system med möte 3 ggr i veckan, fredag, måndag och onsdag där vi på alla möten dokumenterar och reflekterar kort. 
Utvärderingsdelen har vi fått öva mycket på då vi har fått revidera en stor del av projektet, som vårt scope till velocity. Velocityn 
för sprinten var satt alldeles för hög. Antaganden som den baserades på gällde inte, vilket kan förklaras till viss del av gruppens 
stress över att realisera stories. Tekniska problem bl.a. har tidigare lett till att vi inte är där vi enligt vårt gamla scope vill vara. 
Dåliga insikter om vår tillgänglighet under veckan var också bidragande till att vår velocity var för hög. första maj + valborg gjorde 
att vår tillgängliga tid var mindre än antaget. 

Hur vill vi att det ska se ut?
Vi vill på grund av stress bedömt vår velocity och effort esitimation bättre för att på ett bättre sätt kunna utföra vår nästa sprint. Samtidigt vill vi också förbättra vår utvärdering och iterationsförfarande. 

Hur ska vi nå detta?
Detta gör vi genom att vara mer realistiska när vi uppskattar vår velocity och effort vilket vi nämnt tidigare. För att förbättra vår 
utvärderingsförfarande kommer vi att efter varje gång vi ses försöka att reflektera mer hur vi har gått. Då vi tidigare haft överskattat 
vår velocity ganska mycket har vi valt att istället vara pessimisstiska denna gången för att se vart vi hamnar denna gången.

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
Vart är vi?
Den här veckan har endast 10h spenderats på grund av valborg, 1a maj samt en del slutspurter i kandidaten. Detta resulterar i att vi inte 
fick gjort lika mycket som vi hade planerat. Vi kommer att nästkommande vecka göra upp för detta genom att lägga 30h/person när vi det 
(förhoppningsvis) är mindre med kandidaten.
3 timmar första onsdagen - startmöte för sprinten. Specificerade user stories och vad vi ville ha gjort under veckan.
2 timmar andra onsdagen - Review över hur veckan har gått samt
5 timmar fredag - jobba med user stories och få utvecklarmiljön att fungera på samtliga datorer. Även lärt oss hur git fungerar så vi kan 
använda versionshantering
Vart vill vi?
Vi vill nästa vecka ha ett mer jämnt och realistiskt arbetsflöde där vi bättre har uppskattat hur mycket tid vi kommer att kunna använda 
oss utav. 
Vi vill i största möjliga grad hålla 20h per person och veca
Hur tar vi oss dit.
Detta kommer vi att göra genom att på uppstartsmötet/ sprintplanningen på onsdagen att gå igenom allas kalendrar och vara mycket ärliga 
när vi planerar för att undvika att vi hamnar i samma situation som denna veckan.


The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Vart är vi?
Under punkten user stories beskrivs nuläget i ganska bra detalj, främst att planeringen av scopet inte var speciellt bra. Dels för att 
scopet var för brett men även för att vi var överambitiösa gällande hur mycket tid vi trodde vi skulle kunna lägga ner på programmeringen. 
Vi har dock lyckats med ett delmål - att få igång utvecklarmiljön samt versionshantering på samtliga datorer så att möjligheterna för att 
utveckla appen finns där. 
Vart vill vi?
Vi skulle vilja spendera en större andel av tiden att faktiskt utveckla och leverera något konkret. 
Hur tar vi oss dit?
Vi planerar att ta oss dit genom att ha ett mer realistiskt scope samt tidsplanera bättre så att tiden vi lägger på kursen utnyttjas 
optimalt. Vi har även konkretiserat user stories till högre grad för att på så sätt kunna dela upp dem och utnyttja parprogrammeringen 
mer effektivt. 
Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Vart är vi?
Vi har börjat använda oss av git som versionshantering. Detta var utmanande för gruppen då det är en helt ny teknik vi inte använt oss av 
tidigare, vilket betyder att vi var tvugna att lära oss nya kommandon osv. I dagsläget har vi fått igång det grundläggande med git.
Vart vill vi?
 Vi önskar att få ökad förståelse och kan använda den fulla funktionaliteten av branches osv. 
Hur tar vi oss dit?
Detta kommer uppnås dels genom trial and error, dvs. vi använder git i praktiken och försöker lära oss genom det, men även genom att 
gruppmedlemmarna ska försöka läsa på om området.
Relation to literature and guest lectures (how do your reflections relate to what others have to say?
Hur ser det ut idag?
Idag har vi inte full koll på litteratur kopplat till SCRUM, vi var mycket bättre under prepveckorna på att läsa på och skapa förståelse 
för hur man arbetar med SCRUM.  De senaste veckorna har mer legat på tekniska bitar och timmarna vi har på den här kursen har gått åt 
till att få igång en utvecklingsmiljö för att vi så fort som möjligt ska kunna skapa värde åt slutanvändaren. 
Med hjälp av litteratur samt med hjälp av Pontus och klasskamrater har vi lyckats åstadkomma en gemensam repository som vi pushar till. 
Var vill vi komma?
Vi vill arbeta efter SCRUM och kunna applicera litteraturen på sättet vi arbetar på. Om vi gör det tror vi att vårt arbete kommer få 
färre problem med och gå mer smärtfritt än förut. Osäkerheten i gruppen har även varit väldigt stor och ingen vet riktigt vad dom ska göra. Ifall vi kan komma igång med ett bättre SCRUM-tänk tror vi att osäkerheten kommer reduceras och hela gruppen kommer prestera bättre. 
Hur kommer vi dit?
Vi behöver ta hjälp av kursansvariga och samtidigt läsa mer av den litteratur som finns på kurshemsidan. På onsdagar har vi ett ypperligt 
tillfälle att fråga examinator och kursansvariga om hjälp relaterat till just litteratur och SCRUM-frågor. 


Team reflection week 6
Team Reflection-Sprint 4

The chosen scope of the application under development including priority of features and for whom you are creating value.
    Hur ser det ut nu?
        I dagsläget har applikationen försetts med ett antal nya funktioner. Exempelvis finns numera en funktion där en kapten kan välja sitt fartyg när hen loggar in i appen. Vilket gör att kaptenen inte kan byta runt mellan olika fartyg. Produktägaren var väldigt tydlig med att detta var en mycket viktig funktion och funktionen kommer skapa värde för både produktägaren samt slutanvändaren. Vi har även börjat på en funktion som sorterar kajarna i appen så att den kajen som kaptenen ska till näst visas högs upp under “Berth View”. Detta kommer skapa värde för slutanvändaren då det skapar enkelhet för kaptenen. Denna funktion är under utveckling, dock har vi haft mycket problem med själva kodningen.

    Hur vill vi att det ska se ut: 
        Vi vill skapa ännu mer värde för de olika parterna och då måste vi utveckla fler funktioner. Först och främst ska vi se till att få klart den funktionen som är under utveckling. Sedan förra veckan har vi minskat scopet en aning men motiverar detta genom att de funktioner som vi väljer att utveckla istället ska fungera smärtfritt och vara väl implementerade. 

    Hur tar vi oss dit?
        Då vi använder oss av parvis programmering har vi i gruppen utvecklat olika funktioner. Då vi i gruppen har olika velocity och kunskap kommer vi nu testa att byta uppgifter och att de som här lite mer kunskap utvecklar de funktionerna som har visat sig vara lite svårare än de andra. På så sätt tror vi att vi kan effektivisera vårt sätt att arbeta och på så sätt skapa mer värde för kunden under de timmarna vi har att röra oss med. 
        Vi kommer även ta hjälp av andra kurskamrater och lärare för att kunna lösa själva kodandet av funktionen. 

Our social contract
    Hur ser det ut nu?
        Det sociala kontraktet har inte förändrats något till denna veckan utan vi har enligt vårt ursprungliga kontrakt haft möte måndag, onsdag och fredag samt programmerat parvis. Programmeringsparen har ansvar över sina tilldelade uppgifter. Problemen denna vecka har varit att det har varit svårt att samla hela gruppen vid programmeringstillfällen då kandidatarbetet har varit i vägen. 

    Hur vill vi att det ska se ut?
        Vi ser att det finns ett stort internt värde av att alla ska kunna medverka på mötena under sprintarna. På så sätt blir det lättare att få ihop samarbetet och tillfälle att dela med sig av kunskapen man fått i kodens struktur osv. Vi tänkte även göra ändringar i gruppens roller.
    
    Hur tar vi oss dit?
        För att alla ska kunna medverka på mötena under veckan så kommer vi med start nästa sprint flytta mötena till eftermiddagarna så att det lättare passar ihop med alla medlemmars scheman. Alla gruppmedlemmar kommer ha mer tid framöver eftersom att kandidatarbetet snart ska vara inlämnat. Vi tänkte även göra ändringar i gruppens roller för att få mer tydligt definierade roller och öka förståelsen för hela arbetsprocessen (Detta beskrivs mer ingående nedan).

The success criteria for the team in terms of what you want to achieve with your application
    Hur ser det ut idag?
        Idag har vi inte några deffinerade success criteraia då vi har haft svårt att förstå hur dessa ska se ut. 
    
    Hur vill vi att det ska se ut?
        Vi vill ha tydligt definierade success criteria som tydligt representerar de mål som gruppen har med den application som vi levererar 
    
    Hur kommer vi dit?
        Vi ska på onsdagen diskutera detta och få ett förtydligande angående exakt vad success criteria är. Detta tar vi med kursansvariga. 

Your acceptance tests, such as how they were performed and with whom
    Hur ser det ut idag?
        Efter rådgivning med produktägare samt kursansvarig har vi under denna sprint bestämt oss för att minska vårt scope då vi under tidigare sprints missbedömt gruppens velocity. Denna veckan har vi alltså haft bättre förutsättningar att tydligt kunna definiera acceptance tests och har varit tydliga mot produktägaren vad det är vi ska leverera under sprinten. Något vi inte har gjort däremot är att tydligt dokumentera exakt hur vi ska testa funktionaliteten, detta är något vi måste bli bättre på framöver. 

    Hur vill vi att det ska se ut?
        Vi vill ha tydligt definierade acceptance tests för varje user-story som är framtagna i samråd med produktägare. 
    Hur kommer vi dit?
        Vi ska inför nästa sprint i grupp komma fram till acceptance test för våra user-stories och sen få dessa godkända av produktägare. 

The design of your application (choice of APIs, architecture patterns etc)
    Inte relevant för veckans sprint

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
    Inte relevant för veckans sprint

The structural overview of your application (such as class diagrams, domain models or component diagrams)
    Inte relevant för veckans sprint

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Bifogad bild nedan är hur user stories ser ut inför onsdagens möte. 


Den här veckan har vi klarat av vår första epic (EPIC 2) som ses i bilden. Under denna epicen fanns 8 separata user stories som alla var komponenter till den slutgiltiga epicen. Den sammanlagda efforten landade på 146 när alla user stories var summerade. Detta betyder att vår uppskattade velocity var lite lägre än den verkliga velocityn. 

    Hur ser det ut idag? 
        Vi har klarat av en helt epic under en sprint. Det är den första sprinten där vi som grupp känner att vi har bidragit med något konkret värdeskapande för slutkunden. Detta är något vi hittills haft problem med då utvecklarmiljön inte varit fungerade för samtliga medlemmar i gruppen. Då vi har som övergripande mål att skapa värde för slutkunden har vi valt att vara 2-3 personer per dator då vi anser att detta effektiviserar vårt arbete. Bevisligen har detta fungerat bra då vi producerat avsevärt mycket mer i jämförelse med tidigare sprinter
    Hur vill vi att det ska se ut?
        Vi har upplevt problem med vissa andra epics som har varit för avancerade för oss. Vi skulle vilja att vi på ett bättre sätt planerar våra epics så att vi väljer de som vi faktiskt klarar av att genomföra, alternativt hittar sätt att klara av dessa avancerade epicsen.
    Hur planerar vi att ta oss dit?
        Ha en mer genomtänkt planering inför sprinten genom att lägga mer tid samt ha en mer genomgående diskussion med produktägaren och slutanvändaren. När det kommer till de user stories och epics vi inte känner att vi kan klara av planerar vi att stämma in möten med Pontus (IT-ansvarig) samt kolla med övriga grupper om hjälp.

The three KPIs you use for monitoring your progress
    Vi har tydligare definerat dessa KPI:er denna veckan och kommer från och med Sprint 5 att börja utvärdera utifrån dessa. 
        Customer satisfaction - Detta mäts genom att dela in kundnöjdheten i kategorier och sedan sätta en poäng på en skala mellan 0 och 10. Ju längre arbetet fortlöper desto högre hoppas vi dessa faktorers poäng blir och vi kan genom de mäta att framsteg är gjorda. Kategorierna som bedöms är:
        Antal implementerade funktioner: 
        Hur välarbetade och integrerade de implementerade funktionerna är: 
        Funktionernas bidragande nytta för slutanvändaren: 
        Funktionernas bidragande nytta för produktägaren: 
        Velocity - Genom att mäta veckans genomförda velocitypoäng kan vi se hur duktiga och insatta vi blir i programmets kod och språket javascript. Här krävs dock att vi är duktiga på att sätta rimliga och jämförbara velocitypoäng genom hela arbetet. 
        Defects - För att se hur bra programmet fungerar kommer vi mäta de totala antalet defekter. Genom att göra detta kontinuerligt genom arbetets gång kan vi få en bra bild av hur kodningen går och hur väl de implementerade funktionerna fungerar. Denna kommer precis som övriga KPI:er uppdateras på slutmötet för sprinten på onsdagara och kan på så sätt jämföra med veckan innan. Defects kan då hjälpa till att förstå hur kodningen gått inför varje sprint-review. 

Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
    Var är vi?
        Vi har denna veckan för första gången lyckats leverera något konkret i form av kod. Då vi inte tidigare har lyckats programmera något konkret värdeskapande för slutkunden har vi dålig kunskap kring hur findbugs fungerar, och hur vi ska kontrollera vår kodkvalitet. Pga. detta har vi inte genomfört någon kvalitetskontroll denna veckan.
    
    Vart vill vi komma?
        Vi vill kunna genomföra kontinuerliga kvalitetskontroller under sprintens gång för att kunna potentiell åtgärda problem innan sprinten är över. 
    
    Hur planerar vi att ta oss dit?
        Vi planerar att under onsdagen ha ett möte med IT-ansvarig samt dubbelkolla med övriga grupper för att söka hjälp med hur findbugs fungerar. Fungerar detta inte kommer vi använda oss av google och övriga internet för att finna denna information.

The roles you have used within the team
    Vart är vi?
        Denna veckan har vi använt Jonathan som Scrum-master. Resterande gruppmedlemmar har haft rollen som developers. 
    Hur vill vi att det ser ut?
        Precis som tidigare veckor strävar vi efter att alla ska ha tydliga roller och ett jämt ansvarsområde sett över alla medlemmar i gruppen. Vi har genom hela arbetsprocessen värdesatt att alla medlemmar får möjlighet att testa på olika arbetsroller och ansvarsområden för att ge en bättre förståelse för arbetsprocessen. Det här vill vi fortsätta med så gott det går. Här ser vi dock ett behov av att definiera än tydligare vad vardera roll ska bidra med och säkerställa att alla medlemmar förstår vad sin roll för veckan gör för att skapa värde för projektets arbetsgång. 

    Hur tar vi oss dit?
        Vi behöver inför varje vecka se till att alla är väl informerade om sina rollers innebörd och vad för arbetssysslor och vad som förväntas av denna i sin roll. Tydligare uppdelningen här kommer skapa möjlighet för ett effektivare arbete.


The agile practices you have used for the current sprint
    Var är vi?
        Vi har fortsatt på föregående system med möte 3 ggr i veckan där vi dokumenterar vad som sägs och reflekterar över hur de olika user stories:arna går osv. Förra veckan fanns stora problem med uppskattningen av sprintens velocity. Mycket av detta låg på att tekniska problem som vi inte räknade med uppstod. Inför denna vecka var detta åtgärdat men trots det har vi även denna vecka upplevt en del problem med den uppskattade velocityn. Främst upplevs det finnas svårigheter med att väga olika user stories mot varandra. Den stora faktorn till detta är okunskap i koden där vissa user stories utger sig för att vara relativt lätta men när man sedan går ner i koden visar det sig ligga mer bakom än vad som tidigare uppskattades eller vice versa. Detta tror vi naturligt kommer blir bättre och bättre med tiden då vi blir mer bekanta med koden och dess struktur. Vi ser dock detta som en väldigt viktig del och för att få till en jämn arbetsfördelning med effektiva sprints måste detta jobbas mer på. 

    Hur vill vi att det ska se ut?
        Vi vill kunna uppskatta velocityn på ett bättre sätt för att få en mer tydlig bild av vad som är möjlig på en vecka och på det sättet säkerställa att så mycket värde som möjligt skapas varje vecka för slutanvändaren och/eller produktägaren. 
    
    Hur ska vi nå detta?
        Vi har nu under två veckor stött på problem som vi inte i början av sprinten förutspådde (tekniska problem och en felskattning i arbetsbörda pga dålig kunskap kring kodens struktur). Att hantera dessa motgångar på ett bra sätt är vår uppfattning av vad ett agilt arbetssätt innebär och därför såklart eftersträvansvärt. På detta område finns mycket förbättringar. För att inte hamna i en negativ spiral där vi aldrig når en sprints mål och riskera att inget värde skapas i programmeringen behöver därför scoopet på en sprint ändras. Ett sätt är att ändra till en mer pessimistisk syn på velocityn och genom de ta höjd för framtida osäkerheter. Å andra sidan är de såklart viktigt att minska osäkerheterna inför varje vecka. Vi känner därför att en kombination av dessa till en början är att föredra. I fortsättningen kommer vi sträva efter att i grupp sätta bättre velocity på alla user stories genom att säkerställa att alla medlemmar kan ge sin synpunkt på vad som krävs, då den samlade kunskapen kring koden och appens struktur är bra mycket mer än vad den är på individnivå. 

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
    Vart är vi?
        Den här veckan har vi lagt ner 30h för att det bara blev 10h förra veckan.
        3 timmar första onsdagen - startmöte för sprinten. Specificerade user stories och vad vi ville ha gjort under veckan.
        4 timmar andra onsdagen - Review över hur veckan har gått samt
        11 timmar fredag - jobba med user stories 
        12 timmar måndag - jobba med user stories
    
    Vart vill vi?
        Vi vill nästa vecka ha ett mer jämnt och realistiskt arbetsflöde där vi bättre har uppskattat hur mycket tid vi kommer att kunna använda oss utav. Vi vet att det är en röd dag i nästa vecka därför vill vi hålla oss till 15h per person. I och med kandidat deadline på måndagen så kommer det bli svårt att lägga mer.
    
    Hur tar vi oss dit?
    Vi tar oss dit genom att på onsdagen planera in de kommande tillfällena så att vi är säkra på att vi har tillräckligt med tid där alla kan.

The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
    Vart är vi?
        Denna vecka har fokus kunnat läggas mer på att skapa värde och konkreta funktioner i appen. Detta har möjliggjorts av tidigare veckors arbete kring att få igång en fungerande programmeringsmiljö och versionshantering. Däremot så, precis som vi varit inne på har programmeringen tagit mer tid än vad vi först trodde. Mycket på grund av att full inblick i appens källkod saknats vilket dels gjort user storiesen svårarbetade vilket lett till svåra uppskattningar på tidsåtgången.t 

    Vart vill vi?
        Vi skulle vilja ha bättre scope för vardera vecka. Med ett mer rimligt antal user stories för veckan kan också högre krav ställas på att de blir bearbetade. Om någon gruppmedlem stöter på problem är det viktigt att denna meddelar så fort den märker detta för att gruppen i helhet enklare ska kunna hjälpa varandra och inte fastna i samma problem hos vardera medlem. 
    Hur tar vi oss dit?
        När det gäller en sprints scope kommer mycket, som tidigare skrivits, av erfarenhet och lär bli bättre ju fler sprints vi gör. Däremot kan en mer pessimistisk approach tillämpas där också mer tid läggs på att faktiskt fundera ut i grupp hur en ungefärlig lösning på storiesen kan se ut och i vilka filer man bör leta. Detta för att ta del av allas kunskaper och insikter på ett bättre sätt. Utöver detta är det även viktigt att vi har en god kommunikation, även utöver mötena. Detta för att inte fastna i ett problem tidigt efter möte och sedan inte kunna jobba vidare på flera dagar. 

Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
    Vart är vi? 
        Idag arbetar vi med git utan att använda oss av branches. Detta då vi fick tipset av Pontus att hålla oss till grundläggande funktioner och kommandon och därmed arbeta mot mastern hela tiden. Vi använder oss av trello för att ha koll på vår scrum board. 

    Vart vill vi?
        Som vi ser det hade det varit önskvärt att kunna arbeta med branches. Önskvärt hade varit att kunna fler kommandon för git och förståelse kring dessa så att vi lättare kan lösa problem ifall de uppstår utan att ta extern hjälp genom att fråga andra i kursen. 

    Hur tar vi oss dit?
        Som det ser ut i dagsläget så kräver det tid och läsning för att kunna implementera användningen av branches och vi ser det som en högre prioritet att arbeta fram funktionalitet. Därför lägger vi tid på det nu och räknar inte med att ha tid att kunna komma till ett stadie när vi kan arbeta med branches. Vi fortsätter att läsa på och testa oss fram för att kunna uppnå en högre förståelse för git och dess kommandon. 

Relation to literature and guest lectures (how do your reflections relate to what others have to say?
    Hur ser det ut idag?
        Idag arbetar helt okej enligt Scrum, dock kan vi ha tappat lite av de teoretiska bitarna då det varit mycket tekniska problem för alla i vår grupp och vi lagt mer tid på det utan något “Scrumtänk”. Vi försöker hålla oss till de förutbestämda mötestiderna även om det blir väldigt svårt och jobbigt när alla i gruppen har väldigt mycket med kandidatarbetet såhär i slutet på det arbetet. Detta har gett oss lite problem att att verkligen applicera Scrums teori på ett optimalt sätt. 

    Var vill vi komma?
        Vi vill komma till det stadiet att vi applicerar scrums teori på hela vårt arbete utan några hinder eller problem. Vi tror att detta skulle medföra att projektet går bättre och smidigare och att vi kan skapa ännu mer värde för produktägaren samt slutanvändaren. Vi tror också att den osäkerhet som finns i gruppen skulle reduceras, något vi verkligen behöver. 

Hur kommer vi dit?
	- 	Problemet med att vi inte kan samlas som grupp kommer förhoppningsvis att lösas till viss del så fort alla är klara med kandidaten. Detta eftersom vi då kommer kunna lägga större fokus på den här kursen och att vi kommer kunna prioritera dessa möten och inte bara jobba när vi hinner och inte måste jobba med kandidatarbetet. 
Dock kommer det såklart inte lösa alla problem utan vi måste samtidigt läsa på ännu mer om Scrum för att komma till de stadiet när vi jobbar riktigt bra med Scrum.




Team reflection week 7
Team Reflection-Sprint 5
The chosen scope of the application under development including priority of features and for whom you are creating value.
Vart är vi? 
Även denna vecka har vi valt att ha ett mindre scope och fokuserat på att leverera faktiskt värde till produktägare och slutanvändare. Scopet denna vecka har bestått av fyra Epics varav tre är relaterade till utformningen och den fjärde utgörs av skapandet av en konceptuell modell för framtida funktioner vilket har gjorts på efterfrågan av produktägaren. De tre övriga epics vi har jobbat med har varit: lägga till ytterligare information i Vesselinfo, sortera Berth-scrollview, standardfilter för timestamps. Dessa valdes för veckan då vi efter förhandling med produktägaren kom fram till att dessa var lämpliga utefter vår förmåga samt att de tillfrågade dessa funktioner. Vi har dock haft svårt med att utvärdera hur god kodkvalitet våra funktioner haft som vi levererat i denna sprint. Detta har främst berott på att vi ej har kunskap i kodtestning. Under projektets gång har vi också lärt oss att det är svårt att säkerställa kvalitet om vi förhastar oss.
Vart vill vi?
I slutet av nästa sprint vill vi säkerställa att de funktioner som gruppen levererar håller god kvalitet. Kvalitet i detta fall är i vilken grad som produktägaren/ slutanvändaren anser att våra funktioner lever upp till deras förväntningar samt hur väl vår producerade kod klarar att ta sig igenom relevanta kodtester.
Angående den konceptuella modellen vill vi fortsätta utveckla potentiella värdeskapande funktioner i samråd med produktägaren. Detta vill vi göra för att kunna utöka våra leveranser av värde till våra stakeholders då detta är viktigt för att uppnå en god kundnöjdhet.
Prioritet för den sista sprinten kommer vara att fokusera på kvaliteten på den kod som redan finns. Med det sagt så hoppas vi att detta ska vara av störst värde för slutanvändare samt produktägare. 
Hur tar vi oss dit?
Nästa sprint kommer vi att fokusera på att testa de funktioner vi tidigare har utvecklat  så att appen är vattentät till presentationen. 
Genom att behålla ett mindre scope kan vi i större utsträckning säkerställa att det som levereras håller god kvalitet.
För att säkerhetsställa att koden håller god kvalitet behöver vi utforma relevanta bug-tester samt ha tydliga acceptance tests. 

Our social contract
Var är vi?
Denna veckan har vi skrivit om vårt sociala kontrakt. Vi har dels översatt den från engelska till svenska och dessutom lagt till nya roller. 
Scrum master: Jonathan Boman
Rollen innefattar förutom att delta på scrum-of-scrums varje onsdag även att boka in möten och programmeringstillfällen. 
Intern produktägare: Emil Kindgren
Rollen ska ha övergripande ansvar för kontakten med de inblandade aktörerna samt kunna representera produktägaren under våra interna möten. Ansvarar även för att mäta customer satisfaction utefter det utformade poängsystem. 
Trello-ansvarig: Johan Johansson
Rollen ska ha övergripande ansvar för trello och med detta ansvara för att rätt user-stories är på rätt plats. Utöver detta innefattar rollen ansvar för att ta skärmbild på vår trello-scoreboard två gånger varje sprint; i början samt slutet. 
Git-ansvarig: Niklas Westerberg
Rollen ska ha övergripande ansvar för all aktivitet i git och med detta ansvara för att alla reflektioner laddas upp varje vecka. 
Kvalitetsansvarig: John Fransson
Rollen ska ha övergripande ansvar för att kontrollera kvaliteten i de user-stories som utformas. Detta innebär dels att testa koden för buggar via lämpligt program samt att sätta acceptance tests. 
Övriga teammedlemmar
De övriga i teamet har ingen specifik tilldelad roll utan arbetar aktivt med utvecklingen av appen och verkställandet och skapandet av user-stories.
Varför inte alla har fått en roll är för att vi ej vill lägga till en roll utan ett tydligt syfte
Vart vill vi?
Vi vill ha tydligt definierade roller som underlättar sprintarna genom bättre samordning samt olika övergripande ansvarsområden. 
Hur tar vi oss dit?
Under denna veckan har vi definierat nya roller och våra förhoppningar är att detta ska öka effektiviteten. Under denna sprinten insåg vi att det inte är optimalt att byta ut rollerna inför varje sprint eftersom arbetet är iterativt och därmed finns det flera fördelar att fortsätta med samma roller under hela projektets gång. Vi har därför nu bestämt en ansvarig för varje roll och hoppas att detta ska öka samordningen (Dessa syns ovan). 

The success criteria for the team in terms of what you want to achieve with your application
Vart är vi? 
Våra success criteria har ändrats en del under kursens gång. Detta eftersom vi har haft vissa problem med att definiera lite vad som menas med detta och vi har även blandat ihop det med acceptance test. De kriterier vi nu sätter är:
Att vi vill ha förståelse för hur agil utveckling fungerar samt få kunskap om hur vi i framtida projekt ska kunna tillämpa “Scrum-metodiken”.  
Vi vill skapa användarvänlighet för slutanvänderen till appen, i vårt fall sjökaptenen. 
Vi vill skapa värde för produktägaren.
Vi vill att koden vi pushat har en god kvalitet. 
Vart vill vi?
Efter mycket om och men är vi nöjda med dessa success criteria och de får oss att gå mot rätt slutmål. Därför behöver vi inte ändra så mycket på dessa kriterier. Känner vi att vi behöver lägga till något eller ta bort något för att uppnå ett ännu bättre resultat kommer vi självklart göra det. 
Hur tar vi oss dit?
Vi fortsätter att jobba med dessa success criteria och tänker på de när vi utför vårt arbete. Vi kommer låta dessa vara våra ledord under den resterande tiden av projektet. Kommer vi på något mer kriterie kommer vi självklart revidera dessa kriterier. 

Your acceptance tests, such as how they were performed and with who
Vart är vi? 
Denna sprint har vi för varje user-story fokuserat på att utforma relevanta och lämpliga acceptance tests. Tidigare veckor har vi haft det lite svårt atts sätta goda acceptance tests då vi inte haft funktioner som kunnat testas. Därför har vi denna sprint lagt stort fokus på att lära oss hur ett acceptance test bör utformas och vi har i samråd med den tekniska supporten från kursen tagit fram lämpliga tester för våra stories.
Vart vill vi?
 Vi vill säkerställa att det inte finns några luckor om våra tidigare acceptance tests har missat, exempelvis om det finns buggar i funktionerna
Hur tar vi oss dit?
Vi vill lägga till fler acceptanstest gällande specifikt kodkvalitet.
 Dessa acceptanstest ska utformas så att de hjälper oss att nå dit vi vill?
The design of your application (choice of APIs, architecture patterns etc)
Vart är vi? 
Så här har vi jobbat systematiskt (Architecture pattern)
I brist på api, sparat lokalt
Använder PortCDM som API
I dagsläget använder vi oss utav React Native för att stödja största delen av vår applikation. Vi har även laddat ner vissa tillägg som hjälper oss att stödja vissa nya funktioner i appen. Exempel på detta är react-native-keyboardawarescrollview, react-native-prompt, react-native-keyboard-avoiding-view
Idagsläget har vi ej använt oss utav några patterns när vi byggt upp vår kod. Detta har främst berott på att vi ej ansett att de funktioner som lagt till det behövt byggas utifrån ett speciellt mönster då det snarare bestått i att modifiera tidigare funktioner.
Vi har identifierat ett behov av att kunna addera ytterligare information gällande fartygets last eller dylikt. Detta stöds inte i nuläget av backenden, vilket resulterar i att vi sparar denna info lokalt. En förhoppning är att appen/systemet i framtiden kan hantera även denna information, något som vår grupp inte har kunskap nog för att göra under detta projekt. 
Vart vill vi?
I nästa sprint vill vi utvärdera vilka API som vi använt som är relevanta och om vi kan ta bort vissa API för att göra koden mer koncis och ta bort överflödig API.
Vi vill på ett tydligt sätt definiera vilka relevanta mönster det finns och om dessa bör användas i vår programvara
Hur tar vi oss dit?
Genom att gå igenom alla funktioner och se om de nya API vi har använt oss utav verkligen är nödvändiga och se om vi kan skriva om koden så att vi endast använder oss utav API för att definiera de relevanta mönster som finns kommer vi att gå igenom litteratur och hemsidor kring apputveckling för att se om det finns några tips gällande mönster. Sedan kommer vi applicera detta på våra funktioner och se om dessa stämmer överens med varandra. Om så är fallet kommer vi att utvärdera om det är lämpligt att skriva om koden enligt mönstret och om det i så fall finns något positivt utfall att förvänta av detta.

The behavioural overview of your application (for instance through use cases, interaction diagrams or similar)
Var är vi?
Inför varje user-story har vi satt oss in i strukturen genom att använda oss av PortCDM appen för att lokalisera vart funktionen passar bäst in. Sedan har vi letat upp denna del av koden och härifrån har vi studerat relationerna genom att gå bakvägen kring vart information hämtas/lämnas. Genom detta arbetssätt har vi kontinuerligt byggt upp mer förståelse för hur appens funktioner hänger ihop. Detta har dock inte dokumenterats eller ritats upp, utan har skett muntligt eller via slack. Efter diskussion med Håkan har vi nu förstått att det kan vara önskvärt att dokumentera detta i framtiden eftersom det kan motverka dubbelarbete. 
Vart vill vi?
Vi vill tydligt dokumentera hur vi tar oss an de olika user-stories, dvs. hur vi skapar förståelse för den dynamiska funktionaliteten (kopplingen mellan de olika delarna av appen). 
Hur tar vi oss dit?
Vi fick tipset från Håkan att dokumentera detta under sprintens gång på en plats där alla kan komma åt dem. Detta säkerhetsställer att man kan dela information om den dynamiska funktionaliteten via gruppens medlemmar, på ett sätt som motverkar dubbelarbete. 
The structural overview of your application (such as class diagrams, domain models or component diagrams)
Var är vi?
Inför varje user-story har vi satt oss in i strukturen genom att använda oss av PortCDM appen för att lokalisera vart funktionen passar bäst in. Sedan har vi letat upp denna del av koden och härifrån har vi studerat vilka klasser/funktioner som kan vara relevanta att använda sig av eller modifiera. Genom detta arbetssätt har vi kontinuerligt byggt upp mer förståelse för vad som redan finns i appens API. Detta har dock inte dokumenterats eller ritats upp, utan informationsspridningen har skett muntligt eller via slack. Efter diskussion med Håkan har vi nu förstått att det kan vara önskvärt att dokumentera detta i framtiden eftersom det kan motverka dubbelarbete. 
Vart vill vi?
Vi vill tydligt dokumentera hur vi tar oss an de olika user-stories, dvs. hur vi skapar förståelse för den statiska funktionaliteten (kopplingen mellan de olika delarna av appen). 
Hur tar vi oss dit?
Vi fick tipset från Håkan att dokumentera detta under sprintens gång på en plats där alla kan komma åt dem. Detta säkerhetsställer att man kan dela information om den statiska funktionaliteten via gruppens medlemmar, på ett sätt som motverkar dubbelarbete. 

Your user stories in terms of using a standard pattern, acceptance criteria, task breakdown and effort estimation
Bifogad bild nedan är hur user stories ser ut inför onsdagens möte. 

Vart är vi? 
Vi konstruerar user stories genom att i en mening försöka förklara funktionaliteten. Acceptanskriterierna utformar vi utefter potentiella fel en användare hade kunnat upptäcka. De skapas när vi har satt oss in i uppgiften för att kunna fånga upp eventuella fel. User stories delar vi upp i tasks med tydliga steg. Dessa steg är till för att ytterligare förtydliga kriterier och ge gruppen en tydlig bild över framsteg. Vår effort har vi problem med att uppskatta då vi ofta ger oss in i nya områden i appen som vi inte tidigare har jobbat i. Vi underskattar ofta vår velocity. Den här veckan har vi haft svårt att följa de user-stories som har legat i sprinten. Detta beror dels på att när vissa user-stories blev klara så löste vi andra user-stories, dvs. Vissa user-stories gick in i varandra. Detta motiveras av att vi tidigare haft sämre förståelse för hur applikationen fungerar samt att vårt scope varit alldeles för stort. Vi har med detta sagt valt att ta bort en del av de stories som ligger i sprinten och kommer istället fokusera på den kod som redan har färdigställts. 
Vart vill vi?
	Vi vill bli bättre på att uppskatta vår velocity och uppgifternas effort för att få en bättre överblick över veckans arbetsgång.
Hur tar vi oss dit?
	Vi kommer den kommande veckan jobba mer med att förfina existerande funktioner  och förbereda presentation. Vi kommer att vara betydligt mer noggranna gällande hur tidskrävande det är och då borde vi bättre matcha effort och velocity.


The three KPIs you use for monitoring your progress
Vi har tydligare definierat dessa KPI:er denna veckan och kommer från och med Sprint 5 att börja utvärdera utifrån dessa. 
Customer satisfaction - Detta mäts genom att dela in kundnöjdheten i kategorier och sedan sätta en poäng på en skala mellan 0 och 10. Ju längre arbetet fortlöper desto högre hoppas vi dessa faktorers poäng blir och vi kan genom de mäta att framsteg är gjorda. Kategorierna som bedöms är: 
Antal implementerade funktioner: 4
Hur välarbetade och integrerade de implementerade funktionerna är: 8
Funktionernas bidragande nytta för slutanvändaren: 9
Funktionernas bidragande nytta för produktägaren: 8

Velocity - Genom att mäta veckans genomförda velocitypoäng kan vi se hur duktiga och insatta vi blir i programmets kod och språket javascript. Här krävs dock att vi är duktiga på att sätta rimliga och jämförbara velocitypoäng genom hela arbetet. 
Defects - För att se hur bra programmet fungerar kommer vi mäta de totala antalet defekter. Genom att göra detta kontinuerligt genom arbetets gång kan vi få en bra bild av hur kodningen går och hur väl de implementerade funktionerna fungerar. Denna kommer precis som övriga KPI:er uppdateras på slutmötet för sprinten på onsdagara och kan på så sätt jämföra med veckan innan. Defects kan då hjälpa till att förstå hur kodningen gått inför varje sprint-review. 


Code quality using a tool such as Findbugs (1 point if your code includes issues concerning correctness or bad style, 2 points if you have dodgy or performance issues and 3 points if the code is fine), only asses the code you have written yourself
Vart är vi? 
Innan denna sprint har vi ej testat våra kod-kvalitet främst beroende på att vi ej haft nog med kod för att testa i programvara. Dock har vi tidigare “visuellt” försökt avgöra hur god kvalitet koden är samt genom att testa appen och försökt hitta möjliga buggar, vilket kopplas till acceptance critiera. Denna sprint har vi haft och skapat kod som kunnat testats och därför har vi i gruppen börjat använda oss utav “DeepScan” för att försöka hitta buggar i programmet. Dock visade detta program på många fel som ej var kopplade till våra modifikationer av appen varför det var svårt att avgöra vad som är kopplat till kvalitet på vår kod och vad som är orsakat av existerande kod. 
Vart vill vi?
I nästa sprint vill vi på ett strukturerat och tydligt sätt använda oss av en metodik för att testa våra adderade funktionaliteter. Vi vill lära oss hur man skiljer på den kod som skrivits av oss och det tidigare koden.
När vi testat klart vår kod vill vi att den ska vara av hög kvalitet som lever upp till de krav som vår produktägare har satt för att våra leveranser ska skapa värde. Vi vill ej heller leverera kod som innehåller buggar.
Hur tar vi oss dit?
För att ta fram en metodik för att testa vår kod kommer vi att fortsätta att testa olika verktyg som kan användas för att testa vår kods kvalitet. Vi har en teammedlem som är ansvarig för att undersöka detta. Vi kommer även att tillfråga den tekniska hjälpen under Open Arena för att få hjälp hur vi bör testa vår kvalitet.
Vi kommer även att utföra ett test på grundkoden för att på så sätt kunna jämföra de fel som uppstår då mot de felen som uppstår när vi testar vår adderade funktionalitet. 
För att avgöra om våra funktioner är av god kvalitet kommer vi använda vår kodkvalitet som mått samt genom att visa detta för våra produktägare.


The roles you have used within the team
Vart är vi?
Denna veckan har vi gjort ändringar i vilka roller vi använder inom gruppen (dessa är beskrivna i vårt social contract).
Vart vill vi?
Vi vill följa de roller som är angivna i sociala kontraktet. Mer generellt så vill vi ha tydligt definierade roller som underlättar sprintarna genom bättre samordning samt olika övergripande ansvarsområden.
Hur tar vi oss dit?
Vi ska försöka bli bättre på att följa det sociala kontraktet gällande roller och hoppas detta ska bli lättare när vi nu har definierat rollerna tydligare i det sociala kontraktet. 


The agile practices you have used for the current sprint
Vart är vi? 
Vi har denna veckan försökt att lära oss mer om vilka olika agile practices som finns. Versionone (https://www.versionone.com/agile-101/agile-software-programming-best-practices/) beskriver “the core agile software programming practices” som:
Test-first programming (Test-Driven Development),
Rigorous, regular refactoring,
Continuous integration,
Simple design,
Pair programming,
Sharing the codebase between all or most programmers,
A single coding standard to which all programmers adhere,
A common “war-room” style work area.
Vi har sedan tidigare arbetat enligt alla dessa principer, men har inte tydligt definierat vilka metoder som finns. Dessutom används t.ex. Inte endast par-programmering, då det i vissa sammanhang ansetts funnits fördelar med att vara fler för att få fler synpunkter och bättre samsyn. 
Vart vill vi?
Vi vill arbeta efter de agila principer som finns och fundera på hur och varför vi använder dom metoder som vi gör. 
Hur tar vi oss dit?
Vi ska tydligt utvärdera hur vi arbetar/förhåller oss till dessa olika agila “practices”. 

The time you have spent on the course (so keep track of your hours so you can describe the current situation)
Vart är vi?
Denna veckan har vi haft ett mer jämnt och realistiskt arbetsflöde. Det har varit röda dagar under denna vecka och därför har vi bestämt oss för att lägga 15h per person. Då delar av gruppen under tidigare sprintar kunnat lägga mindre tid på grund av kandidatarbetet har de kompenserat med att lägga fler timmar denna vecka. 
Vart vill vi?
Vi vill kunna estimera och bedöma hur mycket tid som är realistiskt att lägga under varje sprint. Vi har lärt oss att faktorer som stress m.m. kan påverka denna bedömning och försöker därför att lägga lite extra tid inför varje sprintplanering. 
Hur tar vi oss dit?
Genom att tydligt planera och definiera uppgifter samt deras omfattning kan vi planera vår tid och därmed också minska stress till följd av att arbete tar längre tid än väntat. 


The sprint review (either in terms of outcome of the current week's exercise or meeting the product owner)
Vart är vi?
Inför denna veckan satte vi som mål att vi vill skapa mer värde för parterna och att målet är att utveckla fler funktioner. Dessutom valde vi att minska scopet för att vi haft problem med att vi satt ett för stort scope tidigare jämför med vår velocity och därmed inte kunna leverera något konkret värde som vi kunnat visa upp för produktägaren. Denna sprint har vi lyckats bättre med att matcha vår uppskattade effort med vår velocity och vi har haft en bra output jämför med vad vi planerat. Alla de user-stories som vi lade in i sprint backlogen är avklarade och de har klarat sig igenom de acceptance critierias som vi har satt. 
Vart vill vi?
Då perioden snart börjar närma sig sitt slut har vi i samråd med produktägarna kommit överens om att de funktioner som vi i projektet lagt till och utvecklat är tillräckligt omfattande. Därför kommer inga fler user-stories/ funktioner att läggas till skåpet. Nästa sprint kommer därför främst att fokusera på att förbättra och analysera de redan skapade funktionerna. Vårt mål för nästa vecka är därför att kunna presentera och lämna över en produkt av hög kvalitet efter nästa sprint har avslutats där både produktägare och slutanvändare är nöjda. Vi vill även fortsätta det utökade samarbetet och bibehålla våra nya “roller” som vi har satt för att lösa de samordningsproblem som vi upplevt tidigare sprintar.
Vi har även som mål att öva på presentationen då vi anser det viktigt att alla medlemmar i gruppen är väl förberedda när de kommer till presentationen då alla ska kunna förstå i huvuddrag hur vi löst de olika funktionerna och hur den tekniska lösningen fungerar. 
Hur tar vi oss dit?
För att säkerställa att våra funktioner/ programvara är av god kvalitet kommer vi att använda oss utav tidigare nämnda buggtestning samt att vi kommer att spendera en hel del tid med att testa själva appen. Om vi hittar  buggar skommer vi att försöka åtgärda detta genom att finslipa funktionerna.
Vi kommer att säkerställa att alla kan presentationen genom att tillsammans öva på den och visa upp appen för att simulera produktpresentationen.
Vi kommer även att gå genom ett scenario tillsammans så att vi känner oss förberedda inför det. 


Best practices for using new tools and technologies (IDEs, version control, scrum boards etc.)
Vart är vi? 
Nytt denna veckan är användandet av Marvel och Photoshop. Dessa programvaror användes för att ta fram konceptuella modeller och kunna visa upp potentiella framtida funktioner för produktägaren. Sen tidigare använder vi Git, Trello, Slack, Android Studio. VS Code har använts som textredigerare som tidigare veckor.
Vart vill vi?
Vi vill lära oss att använda DeepScan för att kontrollera vår kodkvalitet.
Hur tar vi oss dit?
Vi kommer att kolla i Slack om någon annan grupp har använt det och kan ge tips på användning. Om så inte är fallet kommer vi att kolla upp tutorials och tips på nätet. Vi fick reda på att ursprungsappen aldrig har kodtestats med ett liknande verktyg, så en utmaning kommer bli att bara testa de delar av koden som vi själva har utvecklat. 


Relation to literature and guest lectures (how do your reflections relate to what others have to say?
Vart är vi? 
Denna veckan har vi sökt i litteraturen för att hitta hur man utformar bra succsess criterias för ett scrum-projekt. Utöver detta har inget övrigt tillförts från litteratur eller föreläsningar mot tidigare veckor. Naturligt har det blivit så att denna punkt blev behandlad mer i början av projektet och sen mindre och mindre för vardera vecka. 
Vart vill vi?
Till nästa vecka kommer mycket fokus ligga på utvärdering. Därför vill vi använda litteratur och teorier behandlade i kursen samt sådant vi under kursens gång stött på genom egen litteratursökning. 
Hur tar vi oss dit?
Genom att gå igenom de teorier som kursen tar upp och relatera det till vad vi gjort varje vecka. Detta kan innebära att vi även upptäcker att vi använt koncept tidigt som vi inte hade koll på då. 



